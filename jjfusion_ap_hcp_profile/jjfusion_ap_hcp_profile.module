<?php

/**
 * @file
 * Provides features of registration,login,forgot password and reset password in this module.
 */

/**
 * Implements hook_permission().
 */
function jjfusion_ap_hcp_profile_permission() {
  $permissions = array();
  $permissions['access_veeva_profile_configuration'] = array(
    'title' => t('Access veeva profile configuration'),
    'description' => t('Perform configurations for veeva profile settings.'),
  );
  return $permissions;
}

/**
 * Implements hook_init().
 * */
function jjfusion_ap_hcp_profile_init() {
  global $base_url;

  if (isset($_ENV['AH_PRODUCTION']) && $_ENV['AH_PRODUCTION']) {
    define('SERVICE_PORTAL_URL', rtrim(ltrim(parse_url($base_url, PHP_URL_HOST), 'www.'), '/'));
    $registration_picklist = drupal_json_decode(variable_get('janssen_hcp_registration_picklist', ''));
    if (!in_array(SERVICE_PORTAL_URL, $registration_picklist['portals'])) {
      //drupal_set_message("Portal not added in veeva service.", "error");
    }
  }
  else {
    $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
    define('SERVICE_PORTAL_URL', $jnj_veeva_hcp_profile_settings['veeva_service_portal']);
  }
}

/**
 * Modify the drupal mail system to send HTML emails.
 */
class JanssenHcpProfileMailSystem implements MailSystemInterface {

  /**
   * Concatenate and wrap the e-mail body for plain-text mails.
   *
   * @param $message
   *   A message array, as described in hook_mail_alter().
   *
   * @return
   *   The formatted $message.
   */
  public function format(array $message) {
    $message['body'] = implode("\n\n", $message['body']);
    return $message;
  }

  /**
   * Send an e-mail message, using Drupal variables and default settings.
   *
   * @see http://php.net/manual/en/function.mail.php
   * @see drupal_mail()
   *
   * @param $message
   *   A message array, as described in hook_mail_alter().
   * @return
   *   TRUE if the mail was successfully accepted, otherwise FALSE.
   */
  public function mail(array $message) {
    $mimeheaders = array();
    if (isset($message['headers']['Return-Path']) && !ini_get('safe_mode')) {
      $return_path_set = strpos(ini_get('sendmail_path'), ' -f');
      if (!$return_path_set) {
        $message['Return-Path'] = $message['headers']['Return-Path'];
        unset($message['headers']['Return-Path']);
      }
    }
    foreach ($message['headers'] as $name => $value) {
      $mimeheaders[] = $name . ': ' . mime_header_encode($value);
    }
    $line_endings = variable_get('mail_line_endings', MAIL_LINE_ENDINGS);
    if (isset($message['Return-Path']) && !ini_get('safe_mode')) {
      // On most non-Windows systems, the "-f" option to the sendmail command
      // is used to set the Return-Path. There is no space between -f and
      // the value of the return path.
      $mail_result = @mail(
              $message['to'], mime_header_encode($message['subject']), preg_replace('@\r?\n@', $line_endings, $message['body']), join("\n", $mimeheaders), '-f' . $message['Return-Path']
      );
    }
    else {
      // The optional $additional_parameters argument to mail() is not
      // allowed if safe_mode is enabled. Passing any value throws a PHP
      // warning and makes mail() return FALSE.
      $mail_result = @mail(
              $message['to'], mime_header_encode($message['subject']), preg_replace('@\r?\n@', $line_endings, $message['body']), join("\n", $mimeheaders)
      );
    }
    return $mail_result;
  }

}

/**
 * Implements hook_menu().
 */
function jjfusion_ap_hcp_profile_menu() {

  $items['hcp-register'] = array(
    'title' => 'Sign Up',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_profile_registration'),
    /* Anonymous user has to access the link. */
    'access callback' => TRUE
  );

  $items['hcp-profile-update'] = array(
    'title' => 'Update Profile',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_profile_update'),
    'access callback' => 'user_is_logged_in'
  );

  $items['hcp-register/success'] = array(
    'title' => 'Thank You',
    'type' => MENU_CALLBACK,
    'page callback' => 'jnj_veeva_hcp_register_success',
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );
  $items['hcp-register/error'] = array(
    'title' => 'Register error',
    'type' => MENU_CALLBACK,
    'page callback' => 'jnj_veeva_hcp_register_error',
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );

  $items['hcp-forgot-password'] = array(
    'title' => 'Forgotten password or email',
    'type' => MENU_CALLBACK,
    'page callback' => 'hcp_forgot_password',
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );

  $items['hcp-forgot-password/success'] = array(
    'type' => MENU_CALLBACK,
    'title' => t('Forgot Password success'),
    'page callback' => array('jnj_veeva_hcp_forgot_password_success'),
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );
  $items['hcp-forgot-email/success'] = array(
    'title' => 'Forgotten Email',
    'type' => MENU_CALLBACK,
    'page callback' => array('jnj_veeva_hcp_forgot_email_success'),
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );
  $items['hcp-reset-password'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Reset Password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_profile_reset_password'),
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );
  $items['hcp-reset-password/success'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Reset Password success',
    'page callback' => array('jnj_veeva_hcp_reset_password_success'),
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );
  $items['hcp-service-error'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Service Error',
    'page callback' => array('jnj_veeva_hcp_error'),
    'access callback' => 'user_access_roles',
    'access arguments' => array(array('anonymous user')),
  );

  $items['hcp-contacts'] = array(
    'title' => 'Janssen Contacts',
    'page callback' => 'jnj_veeva_hcp_profile_contacts',
    'access callback' => 'user_is_logged_in'
  );

  $items['hcp-optin-preferences'] = array(
    'title' => 'Opt-in Preferences',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_optin_preferences'),
    /* Anonymous user has to access the link. */
    'access callback' => TRUE
  );
  $items['hcp-optin-preferences/success'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Opt-in Preferences',
    'page callback' => array('jnj_veeva_hcp_optin_preferences_success'),
    /* Anonymous user has to access the link. */
    'access callback' => TRUE,
  );
  $items['hcp-email-optout'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Email Optout',
    'page callback' => array('jnj_veeva_hcp_email_optout'),
    /* Anonymous user has to access the link. */
    'access callback' => TRUE,
  );

  $items['hcp-request-visit'] = array(
    'title' => 'HCP Request Visit',
    'page callback' => 'jnj_veeva_hcp_profile_request_visit',
    'page arguments' => array(2),
    'access callback' => 'user_is_logged_in'
  );
  $items['browseashcp'] = array(
    'title' => 'Browse AS HCP',
    'page callback' => 'janssenpro_browseashcp',
    /* Anonymous user has to access the link. */
    'access callback' => TRUE
  );

  $items['admin/config/jnj-hcp-profile'] = array(
    'title' => 'JnJ HCP Profile Configurations',
    'description' => 'Configure veeva profile services settings',
    'access arguments' => array('access_veeva_profile_configuration'),
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/jnj-hcp-profile/settings'] = array(
    'title' => 'JnJ HCP Profile Settings',
    'description' => 'Administer JnJ HCP Profile Settings.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access_veeva_profile_configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/jnj-hcp-profile/settings/general'] = array(
    'title' => 'General Settings',
    'description' => 'Edit general settings.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_profile_settings_form'),
    'access arguments' => array('access_veeva_profile_configuration'),
    'file' => 'includes/admin.inc',
    'weight' => -1,
  );

  $items['admin/config/jnj-hcp-profile/settings/signup'] = array(
    'title' => 'Signup Settings',
    'description' => 'Edit sign-up settings.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_profile_signup_settings_form'),
    'access arguments' => array('access_veeva_profile_configuration'),
    'file' => 'includes/admin.inc',
    'weight' => 1,
  );

  $items['admin/config/jnj-hcp-profile/settings/messages'] = array(
    'title' => 'General Messages',
    'description' => 'Edit general messages.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_profile_message_form'),
    'access arguments' => array('access_veeva_profile_configuration'),
    'file' => 'includes/admin.inc',
    'weight' => 2,
  );

  $items['admin/config/jnj-hcp-profile/settings/email-templates'] = array(
    'title' => 'Email Templates',
    'description' => 'Edit email templates.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_veeva_hcp_profile_email_templates_form'),
    'access arguments' => array('access_veeva_profile_configuration'),
    'file' => 'includes/admin.inc',
    'weight' => 3,
  );

  $items['admin/config/jnj-hcp-profile/settings/success-templates'] = array(
    'title' => 'JnJ HCP Profile Success Page Templates',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jnj_hcp_profile_success_templates_form'),
    'access arguments' => array('access_veeva_profile_configuration'),
    'file' => 'includes/admin.inc',
    'weight' => 4,
  );

  $items['admin/config/jnj-hcp-profile/settings/redirect-url'] = array(
    'title' => 'Redirect URL configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('janssen_redirect_url_settings'),
    'access arguments' => array('access_janssen_site_configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/admin.inc',
  );

  $redirect_list = variable_get('janssenpro_redirect_info', '');
  foreach ($redirect_list as $url_info) {
    $items[$url_info['name']] = array(
      'title' => 'Redirect URL',
      'page callback' => 'janssen_redirect_url',
      /* Anonymous user has to access the link. */
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
      'file' => 'includes/admin.inc',
    );
  }


  return $items;
}

function jnj_veeva_hcp_profile_picklist_values() {
  $registration_picklist = drupal_json_decode(variable_get('janssen_hcp_registration_picklist', ''));
  $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
  $all_therapy_value = $jnj_veeva_hcp_profile_settings['jnj_veeva_hcp_all_therapy_area_value'];

  $key = array_search(strtolower($all_therapy_value), array_map('strtolower', $registration_picklist['therapyArea']));
  if (!empty($key) || $key === 0) {
    unset($registration_picklist['therapyArea'][$key]);
  }
  unset($registration_picklist['securityQuestions']);
  unset($registration_picklist['countryState']);
  foreach ($registration_picklist as $key => $value) {
    $registration_picklist[$key] = array_combine($value, $value);
  }
  return $registration_picklist;
}

/**
 * Display the Forgot password and Forgot Email forms.
 */
function hcp_forgot_password() {
  $output = array();
  $output['forgot_password'] = drupal_get_form('jnj_veeva_hcp_profile_forgot_password');
  $output['forgot_email'] = drupal_get_form('jnj_veeva_hcp_profile_forgot_email');

  return $output;
}

/**
 * Display the Forgot password success page.
 */
function jnj_veeva_hcp_forgot_password_success() {
  drupal_set_title(t('Forgot Password'));
  $email = $_SESSION['forgot-email'];
  unset($_SESSION['forgot-email']);
  return '<div class="forgot-form-wrapper thankyou"><header>
              <h2>' . t('Forgotten password') . '</h2>
              <a class="help" href="/">' . t('Back') . '</a>
            </header>
            <form id="jnj-veeva-hcp-profile-forgot-email">
              <fieldset>
                <p>' . t('An email has been sent to') . ' <strong>' . $email . '</strong>' . t('with instructions on how to reset your password.') . '</p>
              </fieldset>
            </form>
			</div>';
}

function jnj_veeva_hcp_forgot_email_success() {
  drupal_set_title(t('Forgotten email'));
  $email = $_SESSION['forgotemail-emailid'];
  unset($_SESSION['forgotemail-emailid']);
  return '<div class="forgot-form-wrapper thankyou"><header>
              <h2>' . t('Forgotten email') . '</h2>
              <a class="help" href="/">' . t('Back') . '</a>
            </header>
            <form id="jnj-veeva-hcp-profile-forgot-email">
              <fieldset>
                <p>' . t('The email address you\'ve used for registration is') . ' <strong>' . $email . '</strong></p>
              </fieldset>
            </form>
			</div>';
}

/**
 * Display the reset password success page.
 * @return type String
 */
function jnj_veeva_hcp_reset_password_success() {
  $reset_pass_success = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_messages', ''));
  return '<div class="forgot-form-wrapper thankyou"><header>
              <h2>' . t('Forgotten password') . '</h2>
              <a class="help" href="/">' . t('Back') . '</a>
            </header>
            <form id="jnj-veeva-hcp-profile-forgot-email">
              <fieldset>
                <p>' . $reset_pass_success['password_update_success'] . '</p>
              </fieldset>
            </form>
			</div>';
}

/**
 * Display the Registration success page.
 * @return type ARRAY
 */
function jnj_veeva_hcp_register_success() {
  return '<div class="forgot-form-wrapper thankyou"><header>
              <h2>' . t('Thank You') . '</h2>
            </header>
            <form id="jnj-veeva-hcp-profile-forgot-email">
              <fieldset>
                <p>' . t('Your details have been received and we will manually review your application before access can be granted.<br /><br />We will be in touch within three business days.') . '</p>
              </fieldset>
            </form>
			</div>';
}

/**
 * Display the Registration success page.
 * @return type ARRAY
 */
function jnj_veeva_hcp_register_error() {
  $message = $_SESSION['hcp-register-error'];
  $heading = $_SESSION['hcp-register-error-heading'];
  unset($_SESSION['hcp-register-error']);
  unset($_SESSION['hcp-register-error-heading']);
  return '<div class="forgot-form-wrapper thankyou"><header>
              <h2>' . (isset($heading) ? $heading : t('Registration Error')) . '</h2>
              <a class="help" href="/">' . t('Back') . '</a>
            </header>
            <form id="jnj-veeva-hcp-profile-forgot-email" method="post" action="index.html">
              <fieldset>
                <p>' . $message . '</p>
              </fieldset>
            </form>
			</div>';
}

/**
 * Function check weather user have access to the menu or not.
 *
 * @global type $user
 * @param type $roles access roles of the menu
 * @return boolean
 */
function user_access_roles($roles = array()) {
  global $user;
  foreach ($roles as $role) {
    if (in_array($role, $user->roles)) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Implements hook_form_alter for user_login_block form
 *
 * @param type $form
 * @param type $form_state
 */
function jjfusion_ap_hcp_profile_form_user_login_block_alter(&$form, &$form_state) {
  _jnj_veeva_hcp_profile_user_login_form_alter($form, $form_state);
}

/**
 * Implements hook_form_alter for user_login form
 *
 * @param type $form
 * @param type $form_state
 */
function jjfusion_ap_hcp_profile_form_user_login_alter(&$form, &$form_state) {
  _jnj_veeva_hcp_profile_user_login_form_alter($form, $form_state);
}

/**
 * Function overrides user login form
 */
function _jnj_veeva_hcp_profile_user_login_form_alter(&$form, &$form_state) {
  $form['#attributes'] = array('class' => array('login'));
  $form['name']['#title'] = t('Email Address');
  $form['name']['#title_display'] = 'invisible';
  $form['name']['#attributes'] = array('placeholder' => t('Email Address'));
  $form['name']['#description'] = '';

  $form['pass']['#title_display'] = 'invisible';
  $form['pass']['#attributes'] = array('placeholder' => t('Password'));
  $form['pass']['#description'] = '';
  if (drupal_is_front_page()) {
    $form['#action'] = base_path();
  }
  $form['#suffix'] = '<a class="login-mobile btn" href="#">' . t('Login') . '</a>';
  $form['actions']['submit']['#value'] = t('Login');

  unset($form['links']['#markup']);
  foreach ($form as $key => $value) {
    if ($key == '#validate') {

      $form[$key] = array();
      foreach ($value as $validator) {
        if ($validator == 'user_login_authenticate_validate') {
          $validator = 'jnj_veeva_hcp_profile_authenticate_validate';
        }
        $form[$key][] = $validator;
      }
    }
    else {
      $form[$key] = $value;
    }
  }
}

/**
 * Function validates the user login and authentication
 */
function jnj_veeva_hcp_profile_authenticate_validate($form, &$form_state) {

  $name = $form_state['values']['name'];
  $pass = $form_state['values']['pass'];

  $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', array()));
  if (!isset($jnj_veeva_hcp_profile_settings['jnj_veeva_hcp_exclude_extlogin_user_roles'])) {
    $jnj_veeva_hcp_profile_settings['jnj_veeva_hcp_exclude_extlogin_user_roles'] = array(3);
  }
  $user_det = user_load_by_name($name);
  $user_flag = FALSE;
  if (count($jnj_veeva_hcp_profile_settings['jnj_veeva_hcp_exclude_extlogin_user_roles']) > 0) {
    foreach ($jnj_veeva_hcp_profile_settings['jnj_veeva_hcp_exclude_extlogin_user_roles'] as $exclude_role) {
      if ($exclude_role != 0 && $user_det != '' && array_key_exists($exclude_role, $user_det->roles)) {
        $user_flag = TRUE;
      }
    }
  }

  // Use Drupal authentication for this user.
  if ($user_flag) {
    return user_login_authenticate_validate($form, $form_state);
  }
  $user_authentication = new HcpProfile();

  $authenticated = $user_authentication->userAuthentication($name, $pass);

  if ($authenticated['status']) {
    module_invoke_all('janssenpro_authenticate', $authenticated['userData'], $name);

    // This sets up the external user with Drupal by creating a local entry.
    // If they don't exist they are added.
    update_user_data($form_state['uid'], $authenticated['userData']);
    user_external_login_register($name, "jjfusion_ap_hcp_profile");

    // we must set the 'uid' to pass back.
    // This looks up the logged in user and sets the Drupal UID.
    $account = user_external_load($name);
    $form_state['uid'] = $account->uid;
  }
  else {
    // Do nothing, Drupal will handle the error.
  }
}

function update_user_data($uid, $data) {
  $_SESSION['user-details'] = $data;
}

/**
 * Check portal is configured in admin settings.
 */
function checkPortalConfigured() {
  if (isset($_ENV['AH_PRODUCTION']) && $_ENV['AH_PRODUCTION']) {
    $registration_picklist = drupal_json_decode(variable_get('janssen_hcp_registration_picklist', ''));
    if (!in_array(SERVICE_PORTAL_URL, $registration_picklist['portals'])) {
      drupal_set_message(t('Portal is not configured in salesforce. Please check with administrator.'), 'warning', FALSE);
      return false;
    }
  }
  else {
    $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
    if (isset($jnj_veeva_hcp_profile_settings['veeva_service_portal']) && $jnj_veeva_hcp_profile_settings['veeva_service_portal'] == "") {
      drupal_set_message(t('Portal is not configured. Please check with administrator.'), 'warning', FALSE);
      return false;
    }
  }
  return true;
}

/**
 * Display Registration form in multi steps.
 * @param array $form
 * @param array $form_state
 * @param string $no_js_use
 */
function jnj_veeva_hcp_profile_registration($form, &$form_state, $no_js_use = FALSE) {

  global $user;
  $query_params = drupal_get_query_parameters();
  $query_params = array_change_key_case($query_params, CASE_LOWER);
  $skiptostep2 = false;
  if (isset($query_params['regcode']) && !empty($query_params['regcode'])) {
    $form_state['storage']['step'] = 2;
    $form_state['storage']['userProfile']['step1']['haveRegCode'] = 1;
    $skiptostep2 = true;
    $regcode = $query_params['regcode'];
  }
  if (isset($_GET['regprivacycode'])) {
    $form_state['storage']['step'] = 2;
    $form_state['storage']['userProfile']['step1']['haveRegCode'] = check_plain($_GET['regprivacycode']);
  }

  // Redirect to profile page if user already logged in.
  if (user_is_logged_in() && !in_array('administrator', array_values($user->roles))) {
    
  }

  $form['#access'] = checkPortalConfigured();

  $form['#attributes'] = array('id' => 'jnj-veeva-hcp-profile-registration');
  $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
  $total_step = ($jnj_veeva_hcp_profile_settings['no_of_registraion_steps'] != '' ? $jnj_veeva_hcp_profile_settings['no_of_registraion_steps'] : 5);


  $form['#tree'] = TRUE;

  // set the picklist values in array.
  $registration_picklist = drupal_json_decode(variable_get('janssen_hcp_registration_picklist', ''));
  $jnj_veeva_hcp_profile_signup_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_signup_settings', ''));

  $have_reg_code = !isset($form_state['storage']['userProfile']['step1']['haveRegCode']) ? NULL : $form_state['storage']['userProfile']['step1']['haveRegCode'];

  $step = $form_state['storage']['step'] = empty($form_state['storage']['step']) ? 1 : $form_state['storage']['step'];

  // set the pre-filled field values.
  $submitted_values = array();
  if (isset($form_state['values']['userProfile'])) {
    $submitted_values = $form_state['values']['userProfile'];
  }

  if ($step == 1 && !isset($_SESSION['step1_repeat'])) {
    $_SESSION['step1_repeat'] = 0;
  }
  else {
    $_SESSION['step1_repeat'] = 1;
  }



  $form['currentStep'] = array(
    '#type' => 'value',
    '#value' => $step
  );

  switch ($step) {
    case 1:
      unset($form_state['storage']['userProfile']['step2']);
      unset($form_state['storage']['userProfile']['step3']);
      unset($form_state['storage']['userProfile']['step4']);
      unset($form_state['storage']['userProfile']['step5']);

      $form['header'] = array(
        '#markup' => $jnj_veeva_hcp_profile_settings['home_page_header']
      );

      $form['title'] = array(
        '#markup' => '<div class="inner"><h2>' . t('Sign Up') . '</h2>
              <p>' . t('Complete this quick registration form to gain full access to Janssen Pro') . '</p></div>',
      );
      break;
    case 2:
    case 3:
      $form['header'] = array(
        '#markup' => '<h1>' . t('Welcome to<span>Janssen PR<em>O</em></span>') . '</h1>'
      );
      $form['title'] = array(
        '#markup' => '<header>
              <h2>' . t('Register for Janssen Pro') . '</h2>
              <div class="steps">
                <span class="current">' . ($step - 1) . '</span> of <span class="total">' . ($total_step - ($have_reg_code ? 2 : 1)) . '</span>
              </div>
              <a class="help" href="#" title="If you are experiencing problems registering, please call 0410 644 547">Get help with registering</a>
            </header><h3>' . t('Your details') . '<span style="background-image: none;"><em style="background-image: none;">' . '*</em>' . t('Required fields') . '</span></h3>',
      );
      break;
    case 4:
      $form['title'] = array(
        '#markup' => '<header>
              <h2>' . t('Register for Janssen Pro') . '</h2>
              <div class="steps">
                <span class="current">' . ($step - ($have_reg_code ? 2 : 1)) . '</span> of <span class="total">' . ($total_step - ($have_reg_code ? 2 : 1)) . '</span>
              </div>
              <a class="help" href="#" title="If you are experiencing problems registering, please call 0410 644 547">Get help with registering</a>
            </header><h3>' . t('Set a password reminder') . '</h3>',
      );
      break;
    case 5:
      $form['title'] = array(
        '#markup' => '<header>
              <h2>' . t('Register for Janssen Pro') . '</h2>
              <div class="steps">
                <span class="current">' . ($step - ($have_reg_code ? 2 : 1)) . '</span> of <span class="total">' . ($total_step - ($have_reg_code ? 2 : 1)) . '</span>
              </div>
              <a class="help" href="#" title="If you are experiencing problems registering, please call 0410 644 547">' . t('Get help with registering') . '</a>
            </header><h3>Consent</h3>',
      );
      break;
  }



  switch ($step) {
    case 1:
      $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));

      $form['userProfile']['step1']['haveRegCode'] = array(
        '#type' => 'radios',
        '#prefix' => '<label for="edit-userprofile-step1-haveregcode">' . (!empty($jnj_veeva_hcp_profile_signup_settings['haveRegCode_label']) ? $jnj_veeva_hcp_profile_signup_settings['haveRegCode_label'] : t('<span class="have-reg-code">Do you have a Janssen Practitioner Registration Code?</span>')) . t("<a title='Registration Codes are designed to provide access only  to licensed Healthcare Professionals, and to offer  immediate access to this site following registration. <br><br>You can get a registration code from your Janssen representative or by contacting the Janssen Pro team at 0410 644 547.' class='help' href='#'>Help</a></label>"),
        '#options' => array(1 => t('Yes'), 0 => t('No')),
        '#default_value' => isset($form_state['values']['userProfile']['step1']['haveRegCode']) ? $form_state['values']['userProfile']['step1']['haveRegCode'] : NULL,
        '#required' => TRUE,
        '#required_error' => !empty($jnj_veeva_hcp_profile_signup_settings['haveRegCode_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['haveRegCode_req_error'] : t('Please select the option')
      );
      break;

    case 2:

      if ($have_reg_code) {

        $form['userProfile']['step2']['registrationCode'] = array(
          '#type' => 'textfield',
          '#title' => t('Registration Code'),
          '#title_display' => 'invisible',
          '#attributes' => array('maxlength' => 10, 'placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['registrationCode_label']) ? $jnj_veeva_hcp_profile_signup_settings['registrationCode_label'] : t('Registration Code'))),
          '#default_value' => isset($form_state['values']['userProfile']['step2']['registrationCode']) ? $form_state['values']['userProfile']['step2']['registrationCode'] : ($skiptostep2 ? $regcode : NULL),
          '#required' => TRUE,
          '#required_error' => !empty($jnj_veeva_hcp_profile_signup_settings['registrationCode_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['registrationCode_req_error'] : t('Please enter registration Code'),
        );
      }
      else {

        $form['userProfile']['step2']['firstName'] = array(
          '#type' => 'textfield',
          '#title' => t('First Name'),
          '#title_display' => 'invisible',
          '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['firstName_label']) ? $jnj_veeva_hcp_profile_signup_settings['firstName_label'] : t('First Name'))),
          '#default_value' => isset($form_state['values']['userProfile']['step2']['firstName']) ? $form_state['values']['userProfile']['step2']['firstName'] : NULL,
          '#required' => TRUE,
          '#required_error' => !empty($jnj_veeva_hcp_profile_signup_settings['firstName_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['firstName_req_error'] : t('Please enter first name'),
          '#rules' => array(
            array('rule' => 'validate_alpha', 'error' => !empty($jnj_veeva_hcp_profile_signup_settings['alpha_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['alpha_other_error'] : t('Enter only characters'))
          )
        );

        $form['userProfile']['step2']['lastName'] = array(
          '#type' => 'textfield',
          '#title' => t('Last Name'),
          '#title_display' => 'invisible',
          '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['lastName_label']) ? $jnj_veeva_hcp_profile_signup_settings['lastName_label'] : t('Last Name'))),
          '#default_value' => isset($form_state['values']['userProfile']['step2']['lastName']) ? $form_state['values']['userProfile']['step2']['lastName'] : NULL,
          '#required' => TRUE,
          '#required_error' => (isset($jnj_veeva_hcp_profile_signup_settings['lastName_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['lastName_req_error'] : t('Please enter last name')),
          '#rules' => array(
            array('rule' => 'validate_alpha', 'error' => !empty($jnj_veeva_hcp_profile_signup_settings['alpha_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['alpha_other_error'] : t('Enter only characters')),
          )
        );
      }

      $form['userProfile']['step2']['email'] = array(
        '#type' => 'textfield',
        '#title' => t('Email'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['email_label']) ? $jnj_veeva_hcp_profile_signup_settings['email_label'] : t('Email'))),
        '#default_value' => isset($form_state['values']['userProfile']['step2']['email']) ? $form_state['values']['userProfile']['step2']['email'] : NULL,
        '#required' => TRUE,
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['email_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['email_req_error'] : t('Please enter the email')),
        '#rules' => array(
          array('rule' => 'email', 'error' => !empty($jnj_veeva_hcp_profile_signup_settings['email_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['email_other_error'] : t('Invalid email address'))
        )
      );
      $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
      $all_therapy_value = $jnj_veeva_hcp_profile_settings['jnj_veeva_hcp_all_therapy_area_value'];
      $key = array_search(strtolower($all_therapy_value), array_map('strtolower', $registration_picklist['therapyArea']));
      $value = $registration_picklist['therapyArea'][$key];
      unset($registration_picklist['therapyArea'][$key]);
      array_unshift($registration_picklist['therapyArea'], $value);

      $form['userProfile']['step2']['therapyArea'] = array(
        '#type' => 'select',
        '#options' => (is_array($registration_picklist['therapyArea']) ? drupal_map_assoc($registration_picklist['therapyArea']) : array()),
        '#default_value' => isset($form_state['values']['userProfile']['step2']['therapyArea']) ? $form_state['values']['userProfile']['step2']['therapyArea'] : NULL,
        '#required' => TRUE,
        '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['therapyArea_label']) ? $jnj_veeva_hcp_profile_signup_settings['therapyArea_label'] : t('Therapy Area Interests')),
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['therapyArea_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['therapyArea_req_error'] : t('Please select therapy area')),
      );

      $form['userProfile']['step2']['password'] = array(
        '#type' => 'password',
        '#title' => t('Create Password'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['password_label']) ? $jnj_veeva_hcp_profile_signup_settings['password_label'] : t('Create Password'))),
        '#required' => TRUE,
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['password_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['password_req_error'] : t('Please enter the password')),
        '#rules' => array(
          array('rule' => 'length[8,50]', 'error' => (!empty($jnj_veeva_hcp_profile_signup_settings['length[8,50]_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['length[8,50]_other_error'] : t('Please enter minimum 8 characters')))
        )
      );

      $form['userProfile']['step2']['confirm_password'] = array(
        '#type' => 'password',
        '#title' => t('Confirm Password'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['confirm_password_label']) ? $jnj_veeva_hcp_profile_signup_settings['confirm_password_label'] : t('Confirm Password'))),
        '#required' => TRUE,
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['confirm_password_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['confirm_password_req_error'] : t('Please enter Confirm password')),
        '#rules' => array(
          array('rule' => "validate_match_field[userProfile[step2][password]]", 'error' => t(isset($jnj_veeva_hcp_profile_signup_settings['confirm_password_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['confirm_password_other_error'] : 'Password mismatch'))
        )
      );



      if (!$have_reg_code) {

        $country_step2_value = isset($form_state['values']['userProfile']['step2']['country']) ? $form_state['values']['userProfile']['step2']['country'] : NULL;

        $form['userProfile']['step2']['country'] = array(
          '#type' => 'select',
          '#options' => (is_array($registration_picklist['country']) ? drupal_map_assoc($registration_picklist['country']) : array()),
          '#default_value' => $country_step2_value,
          '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['country_label']) ? $jnj_veeva_hcp_profile_signup_settings['country_label'] : t('Country')),
          '#attributes' => array('class' => array('cancel')),
          '#required' => TRUE,
          '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['country_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['country_req_error'] : t('Please select country')),
          '#ajax' => array(
            'callback' => 'ajax_field_state_callback',
            'wrapper' => 'state-step2-replace'
          )
        );

        $form['userProfile']['step2']['gradYear'] = array(
          '#type' => 'textfield',
          '#title' => t('Grad Year'),
          '#title_display' => 'invisible',
          '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['gradYear_label']) ? $jnj_veeva_hcp_profile_signup_settings['gradYear_label'] : t('Grad Year'))),
          '#default_value' => isset($form_state['values']['userProfile']['step2']['gradYear']) ? $form_state['values']['userProfile']['step2']['gradYear'] : NULL,
          '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['gradYear_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['gradYear_req_error'] : t('Please enter graduation year')),
          '#rules' => array(
            array('rule' => 'validate_country_field[userProfile[step2][country]]', 'error' => t(isset($jnj_veeva_hcp_profile_signup_settings['gradYear_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['gradYear_other_error'] : t('Please enter graduation year')))
          ),
          '#states' => array(
            'visible' => array(
              ':input[name="userProfile[step2][country]"]' => array('value' => 'AU'),
            )
          ),
          '#prefix' => '<div class="three-wide">',
          '#suffix' => '</div>'
        );

        $form['userProfile']['step2']['state'] = array(
          '#type' => 'select',
          '#prefix' => '<div class="three-wide" id="state-step2-replace">',
          '#suffix' => '</div>',
          '#options' => _get_states_by_country($country_step2_value),
          '#default_value' => isset($form_state['values']['userProfile']['step2']['state']) ? $form_state['values']['userProfile']['step2']['state'] : NULL,
          '#required' => TRUE,
          '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['state_label']) ? $jnj_veeva_hcp_profile_signup_settings['state_label'] : t('State')),
          '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['state_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['state_req_error'] : t('Please enter state/city')),
        );

        $form['userProfile']['step2']['postCode'] = array(
          '#type' => 'textfield',
          '#title' => t('Postcode'),
          '#title_display' => 'invisible',
          '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['postCode_label']) ? $jnj_veeva_hcp_profile_signup_settings['postCode_label'] : t('Postcode'))),
          '#default_value' => isset($form_state['values']['userProfile']['step2']['postCode']) ? $form_state['values']['userProfile']['step2']['postCode'] : NULL,
          '#required' => TRUE,
          '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['postCode_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['postCode_req_error'] : t('Please enter postal Code')),
          '#rules' => array(
            array('rule' => 'validate_numeric', 'error' => !empty($jnj_veeva_hcp_profile_signup_settings['postCode_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['postCode_other_error'] : t('Enter only Numbers'))
          ),
          '#prefix' => '<div class="three-wide">',
          '#suffix' => '</div>'
        );
      }

      break;

    case 3:

      $form['userProfile']['step3']['role'] = array(
        '#type' => 'select',
        '#options' => (is_array($registration_picklist['roles']) ? drupal_map_assoc($registration_picklist['roles']) : array()),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['role']) ? $form_state['values']['userProfile']['step3']['role'] : NULL,
        '#required' => TRUE,
        '#attributes' => array('class' => array('cancel')),
        '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['role_label']) ? $jnj_veeva_hcp_profile_signup_settings['role_label'] : t('Role')),
        '#required_error' => !empty($jnj_veeva_hcp_profile_signup_settings['role_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['role_req_error'] : t('Please enter role'),
        '#ajax' => array(
          'callback' => 'ajax_field_role_callback',
          'wrapper' => 'role-step3-replace'
        )
      );

      $form['userProfile']['step3']['otherRole'] = array(
        '#type' => 'textfield',
        '#title' => t('Other Role'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['role_label']) ? $jnj_veeva_hcp_profile_signup_settings['role_label'] : t('Other Role'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['otherRole']) ? $form_state['values']['userProfile']['step3']['otherRole'] : NULL,
        '#states' => array(
          'visible' => array(
            ':input[name="userProfile[step3][role]"]' => array('value' => 'Other'),
          )
        ),
        '#prefix' => '<div id="role-step3-replace">',
        '#suffix' => '</div>',
        '#required' => ($form_state['values']['userProfile']['step3']['role'] == 'Other') ? TRUE : FALSE,
        '#required_error' => !empty($jnj_veeva_hcp_profile_signup_settings['other_role_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['other_role_req_error'] : t('Please enter other role'),
      );


      $form['userProfile']['step3']['specialty'] = array(
        '#type' => 'select',
        '#options' => (is_array($registration_picklist['specialty']) ? drupal_map_assoc($registration_picklist['specialty']) : array()),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['specialty']) ? $form_state['values']['userProfile']['step3']['specialty'] : NULL,
        '#required' => TRUE,
        '#attributes' => array('class' => array('cancel')),
        '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['specialty_label']) ? $jnj_veeva_hcp_profile_signup_settings['specialty_label'] : t('Specialty')),
        '#required_error' => !empty($jnj_veeva_hcp_profile_signup_settings['specialty_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['specialty_req_error'] : t('Please enter specialty'),
        '#ajax' => array(
          'callback' => 'ajax_field_specialty_callback',
          'wrapper' => 'specialty-step3-replace'
        )
      );

      $form['userProfile']['step3']['otherSpecialty'] = array(
        '#type' => 'textfield',
        '#title' => t('Other Specialty'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['specialty_label']) ? $jnj_veeva_hcp_profile_signup_settings['specialty_label'] : t('Other Speciality'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['otherSpecialty']) ? $form_state['values']['userProfile']['step3']['otherSpecialty'] : NULL,
        '#states' => array(
          'visible' => array(
            ':input[name="userProfile[step3][specialty]"]' => array('value' => 'Other'),
          )
        ),
        '#prefix' => '<div id="specialty-step3-replace">',
        '#suffix' => '</div>',
        '#required' => ($form_state['values']['userProfile']['step3']['specialty'] == 'Other') ? TRUE : FALSE,
        '#required_error' => !empty($jnj_veeva_hcp_profile_signup_settings['other_specialty_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['other_specialty_req_error'] : t('Please enter other specialty'),
      );

      $form['userProfile']['step3']['practiceName'] = array(
        '#type' => 'textfield',
        '#title' => t('Practice Name'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['practiceName_label']) ? $jnj_veeva_hcp_profile_signup_settings['practiceName_label'] : t('Practice Name'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['practiceName']) ? $form_state['values']['userProfile']['step3']['practiceName'] : NULL,
        '#required' => TRUE,
        '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['practiceName_label']) ? $jnj_veeva_hcp_profile_signup_settings['practiceName_label'] : t('Practice Name')),
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['practiceName_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['practiceName_req_error'] : t('Please enter practice name')),
      );

      $form['userProfile']['step3']['addressLine1'] = array(
        '#type' => 'textfield',
        '#title' => t('Address 1'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['addressLine1_label']) ? $jnj_veeva_hcp_profile_signup_settings['addressLine1_label'] : t('Address 1'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['addressLine1']) ? $form_state['values']['userProfile']['step3']['addressLine1'] : NULL,
        '#required' => TRUE,
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['address1_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['address1_req_error'] : t('Please enter address')),
      );

      $form['userProfile']['step3']['addressLine2'] = array(
        '#type' => 'textfield',
        '#title' => t('Address 2'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => !empty($jnj_veeva_hcp_profile_signup_settings['addressLine2_label']) ? $jnj_veeva_hcp_profile_signup_settings['addressLine2_label'] : t('Address 2')),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['addressLine2']) ? $form_state['values']['userProfile']['step3']['addressLine2'] : NULL,
      );

      $country_step3_value = isset($form_state['values']['userProfile']['step3']['country']) ? $form_state['values']['userProfile']['step3']['country'] : $form_state['storage']['userProfile']['step2']['country'];

      $form['userProfile']['step3']['country'] = array(
        '#type' => 'select',
        '#options' => (is_array($registration_picklist['country']) ? drupal_map_assoc($registration_picklist['country']) : array()),
        '#default_value' => $country_step3_value,
        '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['country_label']) ? $jnj_veeva_hcp_profile_signup_settings['country_label'] : t('Country')),
        '#attributes' => array('class' => array('cancel')),
        '#required' => TRUE,
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['country_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['country_req_error'] : t('Please select country')),
        '#ajax' => array(
          'callback' => 'ajax_field_state_callback',
          'wrapper' => 'state-step3-replace'
        )
      );

      $form['userProfile']['step3']['suburb'] = array(
        '#type' => 'textfield',
        '#title' => t('Suburb'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['suburb_label']) ? $jnj_veeva_hcp_profile_signup_settings['suburb_label'] : t('Suburb'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['suburb']) ? $form_state['values']['userProfile']['step3']['suburb'] : NULL,
        '#required' => TRUE,
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['suburb_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['suburb_req_error'] : t('Please enter suburb')),
      );

      $form['userProfile']['step3']['state'] = array(
        '#type' => 'select',
        '#prefix' => '<div class="two-wide" id="state-step3-replace">',
        '#suffix' => '</div>',
        '#options' => _get_states_by_country($country_step3_value),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['state']) ? $form_state['values']['userProfile']['step3']['state'] : $form_state['values']['userProfile']['step2']['state'],
        '#required' => TRUE,
        '#empty_option' => (!empty($jnj_veeva_hcp_profile_signup_settings['state_label']) ? $jnj_veeva_hcp_profile_signup_settings['state_label'] : t('State')),
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['state_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['state_req_error'] : t('Please enter state/city')),
      );

      $form['userProfile']['step3']['postCode'] = array(
        '#type' => 'textfield',
        '#title' => t('Postcode'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['postCode_label']) ? $jnj_veeva_hcp_profile_signup_settings['postCode_label'] : t('Postcode'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['postCode']) ? $form_state['values']['userProfile']['step3']['postCode'] : $form_state['values']['userProfile']['step2']['postCode'],
        '#required' => TRUE,
        '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['postCode_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['postCode_req_error'] : t('Please enter postal Code')),
        '#prefix' => '<div class="two-wide margin-right-zero">',
        '#suffix' => '</div>',
      );

      $form['userProfile']['step3']['phone'] = array(
        '#type' => 'textfield',
        '#title' => t('Phone'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['phone_label']) ? $jnj_veeva_hcp_profile_signup_settings['phone_label'] : t('Phone'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['phone']) ? $form_state['values']['userProfile']['step3']['phone'] : NULL,
        '#required' => TRUE,
        '#required_error' => (isset($jnj_veeva_hcp_profile_signup_settings['phone_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['phone_req_error'] : t('Please enter phone number')),
        '#rules' => array(
          array('rule' => 'validate_phone', 'error' => t('Enter Valid Phone Number'))
        )
      );

      $form['userProfile']['step3']['fax'] = array(
        '#type' => 'textfield',
        '#title' => t('Fax'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['fax_label']) ? $jnj_veeva_hcp_profile_signup_settings['fax_label'] : t('Fax'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['fax']) ? $form_state['values']['userProfile']['step3']['fax'] : NULL,
        '#rules' => array(
          array('rule' => 'validate_fax', 'error' => 'Enter Valid Fax Number')
        )
      );

      $form['userProfile']['step3']['websiteUrl'] = array(
        '#type' => 'textfield',
        '#title' => t('Website URL'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => (!empty($jnj_veeva_hcp_profile_signup_settings['websiteUrl_label']) ? $jnj_veeva_hcp_profile_signup_settings['websiteUrl_label'] : t('Website URL'))),
        '#default_value' => isset($form_state['values']['userProfile']['step3']['websiteUrl']) ? $form_state['values']['userProfile']['step3']['websiteUrl'] : NULL
      );
      break;

    case 4:

      $form['userProfile']['step4']['securityQuestions'][0]['question'] = array(
        '#type' => 'select',
        '#required_error' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_question_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_question_req_error'] : 'Please select the question'),
        '#empty_option' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_question_label']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_question_label'] : t('Please select ')),
        '#options' => (is_array($registration_picklist['securityQuestions']) ? drupal_map_assoc($registration_picklist['securityQuestions']) : array()),
        '#default_value' => isset($form_state['values']['userProfile']['step4']['securityQuestions'][0]['question']) ? $form_state['values']['userProfile']['step4']['securityQuestions'][0]['question'] : NULL,
      );

      $form['userProfile']['step4']['securityQuestions'][0]['answer'] = array(
        '#type' => 'textfield',
        '#title' => t('Answer'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_answer_label']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_answer_label'] : 'Answer')),
        '#required_error' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_answer_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_0_answer_req_error'] : 'Please enter the answer'),
        '#default_value' => isset($form_state['values']['userProfile']['step4']['securityQuestions'][0]['answer']) ? $form_state['values']['userProfile']['step4']['securityQuestions'][0]['answer'] : NULL,
        '#rules' => array(
          array('rule' => 'validate_value_dependent_field[userProfile[step4][securityQuestions][0][question]]', 'error' => 'Please enter the answer')
        )
      );

      $form['userProfile']['step4']['securityQuestions'][1]['question'] = array(
        '#type' => 'select',
        '#required_error' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_question_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_question_req_error'] : 'Please select the question'),
        '#empty_option' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_question_label']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_question_label'] : t('Please select ')),
        '#options' => (is_array($registration_picklist['securityQuestions']) ? drupal_map_assoc($registration_picklist['securityQuestions']) : array()),
        '#default_value' => isset($form_state['values']['userProfile']['step4']['securityQuestions'][1]['question']) ? $form_state['values']['userProfile']['step4']['securityQuestions'][1]['question'] : NULL,
        '#rules' => array(
          array('rule' => 'validate_unique_field[userProfile[step4][securityQuestions][0][question]]', 'error' => t('Please select different question'))
        )
      );

      $form['userProfile']['step4']['securityQuestions'][1]['answer'] = array(
        '#type' => 'textfield',
        '#title' => t('Answer'),
        '#title_display' => 'invisible',
        '#attributes' => array('placeholder' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_answer_label']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_answer_label'] : 'Answer ')),
        '#required_error' => t(isset($jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_answer_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['securityQuestions_1_answer_req_error'] : 'Please enter the answer'),
        '#default_value' => isset($submitted_values['step4']['securityQuestions'][1]['answer']) ? $submitted_values['step4']['securityQuestions'][1]['answer'] : NULL,
        '#rules' => array(
          array('rule' => 'validate_value_dependent_field[userProfile[step4][securityQuestions][1][question]]', 'error' => 'Please enter the answer')
        )
      );
      break;


    case 5:
      $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));

      $form['userProfile']['step5']['emailSubscribe'] = array(
        '#type' => 'checkbox',
        '#title' => t(!empty($jnj_veeva_hcp_profile_signup_settings['emailSubscribe_label']) ? $jnj_veeva_hcp_profile_signup_settings['emailSubscribe_label'] : 'Yes, I would like to receive email updates from Janssen'),
      );
      $form['userProfile']['step5']['consent'] = array(
        '#markup' => '<p>' . $jnj_veeva_hcp_profile_settings['consent_text'] . '</p>',
      );
      break;
  }

  if ($step > 1) {
    $form['prev'] = array(
      '#type' => 'submit',
      '#value' => t("Back"),
      '#limit_validation_errors' => array(), //Since all info will be discarded, don't validate on 'prev'.
      '#executes_submit_callback' => FALSE,
      '#attributes' => array('class' => array('btn', 'back')),
      '#ajax' => array(
        'wrapper' => 'enquiry-form',
        'callback' => 'jnj_veeva_hcp_profile_registration_callback',
        'event' => 'click',
      )
    );
  }

  if ($step < $total_step) {
    $form['next'] = array(
      '#type' => 'submit',
      '#value' => t('Next'),
      '#executes_submit_callback' => FALSE,
      '#attributes' => array('class' => array('btn', 'next')),
      '#ajax' => array(
        'wrapper' => 'jnj-veeva-hcp-profile-registration',
        'callback' => 'jnj_veeva_hcp_profile_registration_callback',
        'event' => 'click',
      ),
    );
  }

  if ($step == $total_step) {
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Submit'),
      '#attributes' => array('class' => array('btn', 'submit', 'final-submit')),
      '#submit' => array('jnj_veeva_hcp_profile_registration_submit'),
    );
  }

  return $form;
}

/**
 * Registration callback method when click Next/Prev button
 * @param array $form
 * @param array $form_state
 */
function jnj_veeva_hcp_profile_registration_callback($form, &$form_state) {

  // Increment one step in the form
  if (in_array('next', $form_state['triggering_element']['#attributes']['class'])) {

    $current_step = $form_state['storage']['step'];
    if (!empty($form_state['values']['userProfile']['step' . $current_step])) {
      $form_state['storage']['userProfile']['step' . $current_step] = $form_state['values']['userProfile']['step' . $current_step];
    }

    if ($form_state['storage']['step'] == 2) {

      // skip step3 if user choose registration code as yes
      if ($form_state['storage']['userProfile']['step1']['haveRegCode'] == TRUE) {
        $form_state['storage']['step'] ++;
      }

      // Auto Verification
      if ($form_state['storage']['userProfile']['step1']['haveRegCode'] == FALSE) {

        $params['firstName'] = $form_state['storage']['userProfile']['step' . $current_step]['firstName'];
        $params['lastName'] = $form_state['storage']['userProfile']['step' . $current_step]['lastName'];
        $params['email'] = $form_state['storage']['userProfile']['step' . $current_step]['email'];
        $params['country'] = $form_state['storage']['userProfile']['step' . $current_step]['country'];
        $params['state'] = $form_state['storage']['userProfile']['step' . $current_step]['state'];
        $params['postCode'] = $form_state['storage']['userProfile']['step' . $current_step]['postCode'];
        $params['gradYear'] = $form_state['storage']['userProfile']['step' . $current_step]['gradYear'];
        $params['portal'] = SERVICE_PORTAL_URL;
        $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
        if ($jnj_veeva_hcp_profile_settings['iconnect_disable_auto_verification']) {
          $autoverification_status['statusCode'] = ServiceStatusCodes::AUTO_VERIFICATION_FAIL;
        }
        else {
          $hcpprofile = new HcpProfile();
          $autoverification_status = $hcpprofile->autoVerificationRegistration($params);
        }

        $jnj_veeva_hcp_profile_messages = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_messages'));

        if (in_array($autoverification_status['statusCode'], array(ServiceStatusCodes::AUTO_VERIFICATION_SUCCESS, ServiceStatusCodes::AUTO_VERIFICATION_FAIL))) {


          if ($autoverification_status['statusCode'] == ServiceStatusCodes::AUTO_VERIFICATION_SUCCESS) {
            $form_state['storage']['userProfile']['step' . $current_step]['accId'] = $autoverification_status['hcpId'];
          }
          $form_state['storage']['autoVerification'] = $autoverification_status['statusCode'];
        }


        if ($autoverification_status['statusCode'] == ServiceStatusCodes::PROFILE_ALREADY_EXIST_SAME_SECURITY) {
          $_SESSION['hcp-register-error'] = t($jnj_veeva_hcp_profile_messages['profile_already_exist_same_security']);
          $commands[] = ajax_command_invoke(NULL, 'redirectToRegError');
          return array('#type' => 'ajax', '#commands' => $commands);
        }
        elseif ($autoverification_status['statusCode'] == ServiceStatusCodes::PROFILE_ALREADY_EXIST_DIFF_SECURITY) {
          $_SESSION['hcp-register-error'] = t($jnj_veeva_hcp_profile_messages['profile_already_exist_diff_security']);
          $commands[] = ajax_command_invoke(NULL, 'redirectToRegError');
          return array('#type' => 'ajax', '#commands' => $commands);
        }
        elseif ($autoverification_status['statusCode'] == ServiceStatusCodes::PROFILE_ALREADY_EXIST_IN_PROGRESS) {
          $_SESSION['hcp-register-error'] = t($jnj_veeva_hcp_profile_messages['profile_already_exist_in_progress']);
          $commands[] = ajax_command_invoke(NULL, 'redirectToRegError');
          return array('#type' => 'ajax', '#commands' => $commands);
        }
        elseif ($autoverification_status['statusCode'] == ServiceStatusCodes::AUTO_VERIFICATION_SUCCESS) {
          $form_state['storage']['step'] ++;
        }
        elseif ($autoverification_status['statusCode'] == ServiceStatusCodes::AUTO_VERIFICATION_FAIL) {
          $_SESSION['hcp-register-error-heading'] = t($jnj_veeva_hcp_profile_messages['profile_general_failure_heading']);
          $_SESSION['hcp-register-error'] = t($jnj_veeva_hcp_profile_messages['profile_general_failure']); // normal process
        }
      }
    }

    $form_state['storage']['step'] ++;
  }

  // Decrement one step in the form
  if (in_array('back', $form_state['triggering_element']['#attributes']['class'])) {

    if ($form_state['storage']['userProfile']['step1']['haveRegCode'] && $form_state['storage']['step'] == 4) {
      $form_state['storage']['step'] --;
    }

    if ($form_state['storage']['autoVerification'] == ServiceStatusCodes::AUTO_VERIFICATION_SUCCESS &&
        !$form_state['storage']['userProfile']['step1']['haveRegCode'] && $form_state['storage']['step'] == 4) {

      $form_state['storage']['step'] --;
    }
    $form_state['storage']['step'] --;
  }

  $step_name = 'step' . $form_state['storage']['step'];
  if (!empty($form_state['storage']['userProfile'][$step_name])) {
    $form_state['values']['userProfile'][$step_name] = $form_state['storage']['userProfile'][$step_name];
  }



  $new_form_reduild = drupal_rebuild_form('jnj_veeva_hcp_profile_registration', $form_state, $form);

  $commands[] = ajax_command_html('.header', drupal_render($new_form_reduild['header']));
  $commands[] = ajax_command_remove('div.messages');
  $commands[] = ajax_command_css('#register-step-col-left', array('display' => ($form_state['storage']['step'] == 1) ? 'block' : 'none'));
  $commands[] = ajax_command_replace('#jnj-veeva-hcp-profile-registration', drupal_render($new_form_reduild));
  $commands[] = ajax_command_invoke('#register-step-col-right', ($form_state['storage']['step'] == 1) ? 'addClass' : 'removeClass', array('col'));
  $commands[] = ajax_command_invoke(NULL, 'registrationScrollTop');


  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Save user data in CRM by caling API service
 * Login after successful registration
 * @param array $form
 * @param array $form_state
 */
function jnj_veeva_hcp_profile_registration_submit($form, &$form_state) {
  if (in_array('submit', $form_state['triggering_element']['#attributes']['class'])) {
    $current_step = $form_state['storage']['step'];
    if (!empty($form_state['values']['userProfile']['step' . $current_step])) {
      $form_state['storage']['userProfile']['step' . $current_step] = $form_state['values']['userProfile']['step' . $current_step];
    }

    foreach ($form_state['storage']['userProfile'] as $user_profile) {

      foreach ($user_profile as $name => $data) {
        $profile_data[$name] = $data;
        unset($profile_data['confirm_password']);
      }
    }

    $profile_data['portal'] = SERVICE_PORTAL_URL;
    if ($profile_data['firstName'] == '') {
      $profile_data['firstName'] = " ";
    }
    // Call service to create profile
    $hcpprofile = new HcpProfile();
    $profile_status = $hcpprofile->createProfile($profile_data); //p($profile_data);p($profile_status);p($form_state['storage']);exit;
    $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings'));

    // Based on the service response, display the corresponding messages
    if ($profile_status['statusCode'] == ServiceStatusCodes::PROFILE_CREATED_SUCCESS) {
      // Send mail to user
      $language = language_default();
      $params['fname'] = (isset($profile_status['firstName']) ? $profile_status['firstName'] : '');
      $params['lname'] = (isset($profile_status['lastName']) ? $profile_status['lastName'] : '');
      $params['email'] = $form_state['storage']['userProfile']['step2']['email'];
      $from = variable_get('site_mail', '');

      if (isset($form_state['storage']['autoVerification']) && ($form_state['storage']['autoVerification'] == ServiceStatusCodes::AUTO_VERIFICATION_FAIL)) {
        // Auto verifictsion fail email to HCP.
        $to_hcp = $form_state['storage']['userProfile']['step2']['email'];
        $params['fname'] = $form_state['storage']['userProfile']['step2']['firstName'];
        $params['lname'] = $form_state['storage']['userProfile']['step2']['lastName'];
        drupal_mail('jjfusion_ap_hcp_profile', 'registration_auto_fail_hcp', $to_hcp, $language, $params, $from, TRUE);
        // Auto verifictsion fail email to admin.
        $from_hcp = $form_state['storage']['userProfile']['step2']['email'];
        $to_admin = variable_get('site_mail', '');
        drupal_mail('jjfusion_ap_hcp_profile', 'registration_auto_fail_admin', $to_admin, $language, $params, $from_hcp, TRUE);
        drupal_goto("hcp-register/success");
      }
      $form_state_info['uid'] = '';
      $form_state_info['redirect'] = $jnj_veeva_hcp_profile_settings['redirect_url_login'];
      update_user_data($form_state_info['uid'], $profile_status);
      
      // Registering and Logging an externally authenticated user.
      user_external_login_register($form_state['storage']['userProfile']['step2']['email'], "jjfusion_ap_hcp_profile");

      $to = $form_state['storage']['userProfile']['step2']['email'];

      drupal_mail('jjfusion_ap_hcp_profile', 'registration', $to, $language, $params, $from, TRUE);

      user_external_load($form_state['storage']['userProfile']['step2']['email']);

      user_login_submit(array(), $form_state_info);
      drupal_goto($form_state_info['redirect']);
    }
    else {
      $_SESSION['hcp-register-error'] = ServiceStatusCodes::getErrorMessageByCode($profile_status['statusCode']);
      drupal_goto("hcp-register/error");
    }
  }
}

/**
 * Implements hook_fapi_validation_rules()
 */
function jjfusion_ap_hcp_profile_fapi_validation_rules() {

  return array(
    'validate_unique_field' => array(
      'callback' => 'fapi_validation_unique_check',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_match_field' => array(
      'callback' => 'fapi_validation_match_check',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_country_field' => array(
      'callback' => 'fapi_validation_country_check',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_alpha' => array(
      'callback' => 'fapi_validation_alpha',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_numeric' => array(
      'callback' => 'fapi_validation_numeric',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_value_dependent_field' => array(
      'callback' => 'fapi_validation_value_dependent_field',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_phone' => array(
      'callback' => 'fapi_validation_phone',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_fax' => array(
      'callback' => 'fapi_validation_fax',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_char' => array(
      'callback' => 'fapi_validation_char',
      'error_msg' => t('%field cannot be empty'),
    ),
    'validate_pswd' => array(
      'callback' => 'fapi_validation_pswd',
      'error_msg' => t('%field cannot be empty'),
    )
  );
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_unique_check($value, $params, $element, $form_state) {

  $keyParts = preg_split('/[\[\]]+/', $params[0], -1, PREG_SPLIT_NO_EMPTY);
  $param_value = $form_state['values'];
  while ($keyParts) {
    $part = array_shift($keyParts);
    $param_value = $param_value[$part];
  }

  return (isset($param_value) && ($value != $param_value));
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_match_check($value, $params, $element, $form_state) {
  if ($form_state['values']['form_id'] == 'jnj_veeva_hcp_profile_registration') {
    return isset($form_state['values']['userProfile']['step2']['password']) && $value == $form_state['values']['userProfile']['step2']['password'];
  }
  if ($form_state['values']['form_id'] == 'jnj_veeva_hcp_profile_update') {
    return isset($form_state['values']['updateProfile']['password']) && $value == $form_state['values']['updateProfile']['password'];
  }
  return isset($form_state['values'][$params[0]]) && $value == $form_state['values'][$params[0]];
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_country_check($value, $params, $element, $form_state) {
  return !(!isset($value) && $form_state['values']['userProfile']['step2']['country'] == 'AU');
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_alpha($value, $params, $element, $form_state) {
  return preg_match('/^([A-Za-z ]+(\'?))*$/', $value);
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_numeric($value, $params, $element, $form_state) {
  return preg_match('/[^0-9]*/', $value);
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_phone($value, $params, $element, $form_state) {
  return preg_match('/^([\d]*[\s\+\(\).-]?)*$/', $value);
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_fax($value, $params, $element, $form_state) {
  return isset($value) && preg_match('/^([\d]*[\s\+\(\).-]?)*$/', $value);
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_char($value, $params, $element, $form_state) {
  return preg_match('/^([\D ]+(\'?))*$/', $value);
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_pswd($value, $params, $element, $form_state) {

  return preg_match('$\S*(?=\S{8,})(?=\S*[A-Z])(?=\S*[\d])\S*$', $value);
}

/**
 * Function to add fapi validation.
 */
function fapi_validation_value_dependent_field($value, $params, $element, $form_state) {

  $keyParts = preg_split('/[\[\]]+/', $params[0], -1, PREG_SPLIT_NO_EMPTY);
  $param_value = $form_state['values'];
  while ($keyParts) {
    $part = array_shift($keyParts);
    $param_value = $param_value[$part];
  }

  return (!empty($param_value) && !empty($value));
}

/**
 * Function to add fapi validation.
 */
function jjfusion_ap_hcp_profile_clientside_validation_rule_alter(&$js_rules, $element, $context) {

  switch ($context['type']) {
    case 'fapi':

      if (isset($context['message'])) {
        $error_message = $context['message'];
      }
      else {
        $error_message = $context['rule']['error_msg'];
      }

      if ($context['rule']['callback'] == 'fapi_validation_match_check') {
        _clientside_validation_set_equal($element['#name'], $element['#title'], $context['params'][0], $js_rules, $error_message);
      }

      if ($context['rule']['callback'] == 'fapi_validation_unique_check') {
        $js_rules[$element['#name']]['checkNotUnique'] = 'select[name="' . $context['params'][0] . '"]';
        $js_rules[$element['#name']]['messages']['checkNotUnique'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_alpha') {
        $js_rules[$element['#name']]['checkAlpha'] = TRUE;
        $js_rules[$element['#name']]['messages']['checkAlpha'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_numeric') {
        $js_rules[$element['#name']]['checkNumber'] = TRUE;
        $js_rules[$element['#name']]['messages']['checkNumber'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_country_check') {
        $js_rules[$element['#name']]['checkCountry'] = 'select[name="' . $context['params'][0] . '"]';
        $js_rules[$element['#name']]['messages']['checkCountry'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_value_dependent_field') {
        $js_rules[$element['#name']]['checkDependentValue'] = 'select[name="' . $context['params'][0] . '"]';
        $js_rules[$element['#name']]['messages']['checkDependentValue'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_phone') {
        $js_rules[$element['#name']]['validatePhone'] = TRUE;
        $js_rules[$element['#name']]['messages']['validatePhone'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_fax') {
        $js_rules[$element['#name']]['validateFax'] = TRUE;
        $js_rules[$element['#name']]['messages']['validateFax'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_char') {
        $js_rules[$element['#name']]['validateChar'] = TRUE;
        $js_rules[$element['#name']]['messages']['validateChar'] = $error_message;
      }

      if ($context['rule']['callback'] == 'fapi_validation_pswd') {
        $js_rules[$element['#name']]['validatePswd'] = TRUE;
        $js_rules[$element['#name']]['messages']['validatePswd'] = $error_message;
      }

      break;
  }
}

/**
 * Function to get states.
 */
function _get_states_by_country($key = '') {

  if (empty($key)) {
    return array();
  }

  $registration_picklist = drupal_json_decode(variable_get('janssen_hcp_registration_picklist'));
  if ($registration_picklist['countryStateLength'] == 1) {
    $registration_picklist['countryState'][0] = $registration_picklist['countryState'];
  }
  foreach ($registration_picklist['countryState'] as $k => $values) {

    if ($values['country'] == $key) {
      return (is_array($registration_picklist['countryState'][$k]['state']) ? drupal_map_assoc($registration_picklist['countryState'][$k]['state']) : array());
    }
  }

  return array();
}

/**
 * Function to field callback.
 */
function ajax_field_state_callback($form, $form_state) {

  $current_step = 'step' . $form_state['storage']['step'];
  if ($form_state['values']['userProfile'][$current_step]['country'] == 'NZ') {
    $form['userProfile'][$current_step]['state']['#options'][NULL] = 'City';
  }
  return $form['userProfile'][$current_step]['state'];
}

/**
 * Function to role callback.
 */
function ajax_field_role_callback($form, $form_state) {

  $current_step = 'step' . $form_state['storage']['step'];
  if ($form_state['values']['userProfile'][$current_step]['role'] == 'Other') {
    $form['userProfile'][$current_step]['otherRole']['#required'] = TRUE;
    $form['userProfile'][$current_step]['otherRole']['#states'] = array(
      'visible' => array(
        ':input[name="userProfile[step3][role]"]' => array('value' => 'Other'),
      )
    );
  }
  else {
    $form['userProfile'][$current_step]['otherRole']['#required'] = FALSE;
  }
  return $form['userProfile'][$current_step]['otherRole'];
}

/**
 * Function to speciality callback.
 */
function ajax_field_specialty_callback($form, $form_state) {

  $current_step = 'step' . $form_state['storage']['step'];
  if ($form_state['values']['userProfile'][$current_step]['specialty'] == 'Other') {
    $form['userProfile'][$current_step]['otherSpecialty']['#required'] = TRUE;
    $form['userProfile'][$current_step]['otherSpecialty']['#states'] = array(
      'visible' => array(
        ':input[name="userProfile[step3][specialty]"]' => array('value' => 'Other'),
      )
    );
  }
  else {
    $form['userProfile'][$current_step]['otherSpecialty']['#required'] = FALSE;
  }
  return $form['userProfile'][$current_step]['otherSpecialty'];
}

/**
 * Implements hook_mail()
 */
function jjfusion_ap_hcp_profile_mail($key, &$message, $params) {
  if ($key == 'registration' || $key == 'reset_password' || $key == 'hcp_optin_preferences') {
    $message['headers']['MIME-version'] = '1.0';
    $message['headers']['Content-Type'] = 'text/html; charset=utf-8';
  }
  $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
  if ($jnj_veeva_hcp_profile_settings['site_cc_email'] != '' && $params['cc'] != '') {
    $params['cc'] = $params['cc'] . ', ' . $jnj_veeva_hcp_profile_settings['site_cc_email'];
  }
  elseif ($jnj_veeva_hcp_profile_settings['site_cc_email'] != '' && $params['cc'] == '') {
    $params['cc'] = $jnj_veeva_hcp_profile_settings['site_cc_email'];
  }
  $message['headers']['CC'] = $params['cc'];
  $jnj_veeva_hcp_profile_email_templates = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_email_templates'));

  $message['subject'] = token_replace($jnj_veeva_hcp_profile_email_templates[$key]['subject'], $params);
  $message['body'][] = token_replace($jnj_veeva_hcp_profile_email_templates[$key]['body'], $params);
}

/**
 * Implements hook_tokens()
 */
function jjfusion_ap_hcp_profile_tokens($type, $tokens, array $data = array(), array $options = array()) {

  $replacements = array();

  if ($type == 'hcpuser') {
    foreach ($tokens as $name => $original) {
      if (array_key_exists($name, $data)) {
        $replacements[$original] = $data[$name];
      }
    }
  }
  return $replacements;
}

/**
 * Function to print.
 */
function p($res) {
  echo '<pre>';
  print_r($res);
  echo '</pre>';
}

/**
 * Implements hook_block_info().
 */
function jjfusion_ap_hcp_profile_block_info() {

  $blocks['registration'] = array(
    'info' => t('Sign Up')
  );
  $blocks['forgot_password'] = array(
    'info' => t('Forgotten Password')
  );
  $blocks['forgot_email'] = array(
    'info' => t('Forgotten Email')
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function jjfusion_ap_hcp_profile_block_view($delta = '') {

  switch ($delta) {
    case 'registration':
      $block['subject'] = t('Sign Up');
      $block['content'] = drupal_get_form('jnj_veeva_hcp_profile_registration');
      break;

    case 'forgot_password':
      $block['subject'] = t('Forgotten password');
      $block['content'] = drupal_get_form("jnj_veeva_hcp_profile_forgot_password");
      break;

    case 'forgot_email':
      $block['subject'] = t('Forgotten Email');
      $block['content'] = drupal_get_form("jnj_veeva_hcp_profile_forgot_email");
      break;
  }

  return $block;
}

/**
 * Display the Forgot Password form.
 */
function jnj_veeva_hcp_profile_forgot_password($form, $form_state) {

  $form['#prefix'] = '<div class="forgot-form-wrapper"><header>
              <h2>' . t('Forgotten password or email') . '</h2>
              <a class="help" href="/">' . t('Back') . '</a>
              <p>' . t('Please complete the following fields to receive either your password, or email.') . '</p>
            </header></div>';
  $form['forgot_password']['forgot-pass-markup'] = array(
    '#markup' => t('Forgotten Password'),
  );

  $form['forgot_password']['email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#title_display' => 'invisible',
    '#attributes' => array('placeholder' => t('Email Address')),
    '#size' => 32,
    '#required' => TRUE,
    '#rules' => array('rule' => 'email'),
  );

  $form['forgot_password']['Submit'] = array(
    '#type' => 'submit',
    '#value' => t('Reset My Password'),
    '#attributes' => array('class' => array('btn password-reset')),
  );

  return $form;
}

/**
 * Submit the Forgot Password form.
 */
function jnj_veeva_hcp_profile_forgot_password_validate($form, $form_state) {

  global $base_url;

  $params['email'] = $form_state['values'] ['email'];
  $params['isEmail'] = TRUE;
  $params['portal'] = SERVICE_PORTAL_URL;


  $hcpprofile = new HcpProfile();
  $forgot_password_status = $hcpprofile->forgotPassword($params);

  $jnj_veeva_hcp_profile_messages = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_messages'));

  if ($forgot_password_status['statusCode'] == ServiceStatusCodes::FORGOT_PWD_VALID_EMAIL) {

    $params['fname'] = $forgot_password_status['firstName'];
    $params['lname'] = $forgot_password_status['lastName'];
    $params['email'] = $form_state['values']['email'];
    $params['password_reset_link'] = $base_url . '/hcp-reset-password/' . base64_encode($params['email']) . '/' . base64_encode($forgot_password_status['verificationCode']);

    $from = variable_get('site_mail', '');
    $to = $form_state['values'] ['email'];
    $_SESSION['forgot-email'] = $to;
    drupal_mail('jjfusion_ap_hcp_profile', 'forgot_password', $to, language_default(), $params, $from, TRUE);
    drupal_goto('hcp-forgot-password/success');
  }
  elseif ($forgot_password_status['statusCode'] == ServiceStatusCodes::FORGOT_PWD_INVALID_EMAIL) {
    form_set_error('email', t($jnj_veeva_hcp_profile_messages['forgot_password_invalid_email']));
  }
  else {
    form_set_error('email', t("Sorry not able to process your request. Please try after some time."));
  }
}

/**
 * Display the Forgot Email form.
 */
function jnj_veeva_hcp_profile_forgot_email($form, $form_state) {

  $janssen_hcp_registration_picklist = drupal_json_decode(variable_get('janssen_hcp_registration_picklist'));

  $form['forgot-email-markup'] = array(
    '#markup' => '<h3>' . t('Forgot Email') . '<span>' . t('Confirm the answers to the security questions you set at the time you registered to access your email in the system.') . '</span></h3>',
  );

  $form['securityQuestions'] = array(
    '#tree' => TRUE
  );

  $form['securityQuestions'][0]['question'] = array(
    '#type' => 'select',
    '#required' => TRUE,
    '#required_error' => t('Please select the question'),
    '#options' => (is_array($janssen_hcp_registration_picklist['securityQuestions']) ? drupal_map_assoc($janssen_hcp_registration_picklist['securityQuestions']) : array()),
    '#empty_option' => t('Select a question'),
    '#default_value' => '',
  );

  $form['securityQuestions'][0]['answer'] = array(
    '#type' => 'textfield',
    '#title' => t('Answer'),
    '#title_display' => 'invisible',
    '#attributes' => array('placeholder' => t('Answer')),
    '#size' => 50,
    '#required' => TRUE,
    '#required_error' => t('Please enter your answer')
  );

  $form['securityQuestions'][1]['question'] = array(
    '#type' => 'select',
    '#required' => TRUE,
    '#options' => (is_array($janssen_hcp_registration_picklist['securityQuestions']) ? drupal_map_assoc($janssen_hcp_registration_picklist['securityQuestions']) : array()),
    '#empty_option' => t('Select a question'),
    '#required_error' => t('Please select the question'),
    '#default_value' => '',
  );

  $form['securityQuestions'][1]['answer'] = array(
    '#type' => 'textfield',
    '#title' => t('Answer'),
    '#title_display' => 'invisible',
    '#attributes' => array('placeholder' => t('Answer')),
    '#size' => 50,
    '#required' => TRUE,
    '#required_error' => t('Please enter your answer')
  );

  $form['lastName'] = array(
    '#type' => 'textfield',
    '#title' => t('Last Name'),
    '#title_display' => 'invisible',
    '#attributes' => array('placeholder' => t('Last Name')),
    '#size' => 50,
    '#required' => TRUE,
    '#required_error' => t('Please enter your last name')
  );

  $form['Submit'] = array(
    '#type' => 'submit',
    '#value' => t('Access My email'),
    '#attributes' => array('class' => array('btn email-reset'))
  );
  return $form;
}

/**
 * Submit the Forgot Password form.
 */
function jnj_veeva_hcp_profile_forgot_email_validate($form, $form_state) {//p($form_state['values']);exit;
  $params['securityQuestions'] = $form_state['values']['securityQuestions'];
  $params['lastName'] = $form_state['values']['lastName'];
  $params['isEmail'] = FALSE;
  $params['portal'] = SERVICE_PORTAL_URL;


  $hcpprofile = new HcpProfile();
  $forgot_password_status = $hcpprofile->forgotPassword($params);

  $jnj_veeva_hcp_profile_messages = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_messages'));

  if ($forgot_password_status['statusCode'] == ServiceStatusCodes::SECURITY_QUES_MATCH) {
    $_SESSION['forgotemail-emailid'] = $forgot_password_status['email'];
    drupal_goto('hcp-forgot-email/success');
  }
  elseif ($forgot_password_status['statusCode'] == ServiceStatusCodes::SECURITY_QUES_DOESNT_MATCH) {
    form_set_error('lastName', t($jnj_veeva_hcp_profile_messages['forgot_email_security_question_does_not_match']));
  }
}

/**
 * Display the Reset Password Form.
 */
function jnj_veeva_hcp_profile_reset_password($form, $form_state) {

  if (!arg(1) && !arg(2)) {
    drupal_goto();
  }

  $params['email'] = base64_decode(arg(1));
  $params['verificationCode'] = base64_decode(arg(2));
  $params['validateVC'] = TRUE;
  $params['portal'] = SERVICE_PORTAL_URL;

  $hcpprofile = new HcpProfile();
  $reset_password_status = $hcpprofile->resetPassword($params);

  $jnj_veeva_hcp_profile_messages = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_messages'));
  $jnj_veeva_hcp_profile_signup_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_signup_settings'));

  if ($reset_password_status['statusCode'] == ServiceStatusCodes::EMAIL_VERCODE_NOT_VALID) {
    drupal_set_message(t($jnj_veeva_hcp_profile_messages['reset_pwd_vercode_not_valid']), 'error');
  }
  elseif ($reset_password_status['statusCode'] == ServiceStatusCodes::EMAIL_VERCODE_VALID) {

    $form['email'] = array(
      '#type' => 'value',
      '#value' => $params['email'],
    );
    $form['password'] = array(
      '#type' => 'password',
      '#title' => 'Password',
      '#title_display' => 'invisible',
      '#attributes' => array('placeholder' => !empty($jnj_veeva_hcp_profile_signup_settings['password_label']) ? $jnj_veeva_hcp_profile_signup_settings['password_label'] : t('Create Password')),
      '#required' => TRUE,
      '#rules' => array(
        array('rule' => 'length[8,50]', 'error' => (!empty($jnj_veeva_hcp_profile_signup_settings['length[8,50]_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['length[8,50]_other_error'] : t('Please enter minimum 8 characters')))
      )
    );

    $form['confirm_password'] = array(
      '#type' => 'password',
      '#attributes' => array('placeholder' => !empty($jnj_veeva_hcp_profile_signup_settings['confirm_password_label']) ? $jnj_veeva_hcp_profile_signup_settings['confirm_password_label'] : t('Confirm Password')),
      '#required' => TRUE,
      '#title' => 'Confirm Password',
      '#title_display' => 'invisible',
      '#rules' => array(
        array('rule' => 'validate_match_field[password]', 'error' => t(isset($jnj_veeva_hcp_profile_signup_settings['confirm_password_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['confirm_password_other_error'] : t('Password mismatch'))
        ))
    );
    $form['Submit'] = array(
      '#type' => 'submit',
      '#value' => 'Reset Password',
      '#attributes' => array('class' => array('btn email-reset')),
    );
  }

  return $form;
}

/**
 * Reset the password.
 */
function jnj_veeva_hcp_profile_reset_password_submit($form, $form_state) {

  require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');

  $params['email'] = $form_state['values']['email'];
  $params['password'] = $form_state['values']['password'];
  $params['validateVC'] = FALSE;
  $params['verificationCode'] = base64_decode(arg(2));
  $params['portal'] = SERVICE_PORTAL_URL;

  $hcpprofile = new HcpProfile();
  $reset_password_status = $hcpprofile->resetPassword($params);

  if ($reset_password_status['statusCode'] == ServiceStatusCodes::PASSWORD_UPDATE_SUCCESS) {

    if (isset($reset_password_status['firstName'])) {
      $email_params['fname'] = $reset_password_status['firstName'];
    }
    if (isset($reset_password_status['lastName'])) {
      $email_params['lname'] = $reset_password_status['lastName'];
    }
    $from = variable_get('site_mail', '');
    $to = $form_state['values'] ['email'];

    drupal_mail('jjfusion_ap_hcp_profile', 'reset_password', $to, language_default(), $email_params, $from, TRUE);
    drupal_goto('hcp-reset-password/success');
  }
  elseif ($reset_password_status['statusCode'] == ServiceStatusCodes::EMAIL_VERCODE_NOT_VALID) {
    drupal_set_message(t('Unable to reset password. Please try after some time.'), 'error');
  }
}

/**
 * Implements hook_user_login().
 */
function jjfusion_ap_hcp_profile_user_login(&$edit, $account) {

  $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings'));
  $_GET['destination'] = $jnj_veeva_hcp_profile_settings['redirect_url_login'];
  $redirect_list = variable_get('janssenpro_redirect_info', ''); //p($_SESSION['userdestination']);exit;
  if (isset($_SESSION['userdestination']) && $_SESSION['userdestination'] != '') {
    foreach ($redirect_list as $url_info) {
      if ($url_info['name'] == $_SESSION['userdestination']) {//p($_SESSION['userdestination']);echo 'hiiiiiiiiiiiiii';exit;
        unset($_SESSION['userdestination']);
        $_GET['destination'] = $url_info['redirect_url'];
        drupal_goto($url_info['redirect_url']);
        exit;
      }
    }
  }
}

/**
 * Function to display hcp service error.
 */
function jnj_veeva_hcp_error() {
  return "Portal is not configured in veeva. Please check with administrator.";
}

/**
 * Function to display hcp contacts.
 */
function jnj_veeva_hcp_profile_contacts() {
  global $user;
  drupal_add_js('misc/ajax.js');
  $item = db_select('jnj_hcp_rep_request_call', 'n')
      ->fields('n')
      ->condition('uid', $user->uid, '=')
      ->execute()
      ->fetchAll();
  $hcp_rep_time = array();
  foreach ($item as $value) {
    $dateFromDatabase = $value->req_time;
    $dateAgo = strtotime("-24 hours");
    if ($dateFromDatabase >= $dateAgo) {
      $hcp_rep_time[$value->rep_id] = TRUE;
    }
    else {
      $hcp_rep_time[$value->rep_id] = false;
    }
  }
  $params = array("accId" => (isset($_SESSION['user-details']) ? $_SESSION['user-details']['accId'] : ''));
  $hcp_profile = new HcpProfile();
  $hcp_rep_list = $hcp_profile->getHcpRepList($params);
  if ($hcp_rep_list['repSize'] == 1) {
    $tempdata = $hcp_rep_list['myRepDetails'];
    unset($hcp_rep_list['myRepDetails']);
    $hcp_rep_list['myRepDetails'][] = $tempdata;
  }
  foreach ($hcp_rep_list['myRepDetails'] as $hcp_rep) {
    if ($hcp_rep['repName'] != 'SR Demo' && ((strtolower($_SESSION['user-details']['KOL']) == 'true' && $hcp_rep['repProfile'] == 'AP_Core_MSL') || $hcp_rep['repProfile'] == 'AP_Core_Sales')) {
      $hcp_rep['disable_request_call'] = (isset($hcp_rep_time[$hcp_rep['repID']]) ? $hcp_rep_time[$value->rep_id] : FALSE);
      $hcp_rep_result[$hcp_rep['repProfile']][] = $hcp_rep;

      $hcp_rep_cache[$hcp_rep['repID']] = $hcp_rep;
    }
  }


  if (isset($hcp_rep_cache)) {
    cache_set('hcp_rep_list_' . $user->data['accId'], $hcp_rep_cache);
  }
  foreach ($hcp_rep_result as $repkey => $replist) {
    usort($hcp_rep_result[$repkey], function($a, $b) {
      if ($a['callCount'] == $b['callCount'])
        return 0;
      return $a['callCount'] < $b['callCount'] ? 1 : -1;
    });
    $hcp_rep_result[$repkey] = array_slice($hcp_rep_result[$repkey], 0, 3);
  }
  return theme('hcpreplist', array('data' => $hcp_rep_result));
}

/**
 * Function to display hcp request visit.
 */
function jnj_veeva_hcp_profile_request_visit($repID) {
  global $user;
  $cache_hcp_rep_list = cache_get('hcp_rep_list_' . $user->data['accId']);

  if (array_key_exists($repID, $cache_hcp_rep_list->data)) {
    $rep_data = $cache_hcp_rep_list->data[$repID];
  }
  $params['RepName'] = $rep_data['repName'];
  $params['HCPName'] = $_SESSION['user-details']['firstName'];
  $params['HCPLname'] = $_SESSION['user-details']['lastName'];
  $params['HCPEmail'] = $user->name;
  $params['HCPPhone'] = $_SESSION['user-details']['phone'];
  $params['cc'] = variable_get('site_mail', '');

  $from = variable_get('site_mail', '');
  $to = $rep_data['repEmail'];
  drupal_mail('jjfusion_ap_hcp_profile', 'hcp_request_visit', $to, language_default(), $params, $from, TRUE);

  $commands[] = ajax_command_replace('#' . $repID, '<a class="btn request requested" href="#">Call requested</a>');
  $item = db_select('jnj_hcp_rep_request_call', 'n')
      ->fields('n')
      ->execute()
      ->fetchAll();

  foreach ($item as $valu) {
    if ($valu->rep_id == $rep_data['repID']) {
      db_delete('jnj_hcp_rep_request_call')
          ->condition('rep_id', $valu->rep_id)
          ->execute();
    }
  }
  db_insert('jnj_hcp_rep_request_call')
      ->fields(array(
        'uid' => $user->uid,
        'rep_id' => $rep_data['repID'],
        'req_time' => time(),
      ))
      ->execute();

  print ajax_render($commands);
}

/**
 * Implements hook_theme()
 */
function jjfusion_ap_hcp_profile_theme() {
  return array(
    'hcpreplist' => array(
      'variables' => array('data' => NULL),
      'path' => drupal_get_path('module', 'jjfusion_ap_hcp_profile') . '/templates',
      'template' => 'hcp-rep-list',
    ),
    'user_login_block' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'jjfusion_ap_hcp_profile') . '/templates',
      'template' => 'user-login',
    ),
    'jnj_veeva_hcp_profile_registration' => array(
      'render element' => 'form',
      'template' => 'signup',
      'path' => drupal_get_path('module', 'jjfusion_ap_hcp_profile') . '/templates',
    ),
    'jnj_veeva_hcp_profile_forgot_password' => array(
      'render element' => 'form',
      'template' => 'forgot-password',
      'path' => drupal_get_path('module', 'jjfusion_ap_hcp_profile') . '/templates',
    ),
    'jnj_veeva_hcp_profile_forgot_email' => array(
      'render element' => 'form',
      'template' => 'forgot-email',
      'path' => drupal_get_path('module', 'jjfusion_ap_hcp_profile') . '/templates',
    ),
    'jnj_veeva_hcp_profile_reset_password' => array(
      'render element' => 'form',
      'template' => 'reset-password',
      'path' => drupal_get_path('module', 'jjfusion_ap_hcp_profile') . '/templates',
    ),
    'jnj_veeva_hcp_profile_update' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'jjfusion_ap_hcp_profile') . '/templates',
      'template' => 'update-hcp-profile',
    ),
  );
}

/**
 * Function to display hcp profile update.
 */
function jnj_veeva_hcp_profile_update($form) {
  global $user;
  $user_details = $_SESSION['user-details'];
  $registration_picklist = drupal_json_decode(variable_get('janssen_hcp_registration_picklist', ''));
  $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings', ''));
  $all_therapy_value = $jnj_veeva_hcp_profile_settings['jnj_veeva_hcp_all_therapy_area_value'];
  $key = array_search(strtolower($all_therapy_value), array_map('strtolower', $registration_picklist['therapyArea']));
  $value = $registration_picklist['therapyArea'][$key];
  unset($registration_picklist['therapyArea'][$key]);
  array_unshift($registration_picklist['therapyArea'], $value);

  $jnj_veeva_hcp_profile_signup_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_signup_settings'));
  $jnj_veeva_hcp_profile_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_settings'));

  $form['#tree'] = TRUE;

  $form['updateProfile']['email'] = array(
    '#type' => 'value',
    '#value' => $user->name
  );

  $form['updateProfile']['accId'] = array(
    '#type' => 'value',
    '#value' => $user_details['accId']
  );

  $form['updateProfile']['title'] = array(
    '#type' => 'markup',
    '#title' => t('Title'),
    '#markup' => $user_details['title']
  );

  $form['updateProfile']['firstname'] = array(
    '#type' => 'markup',
    '#title' => t('First Name'),
    '#markup' => $user_details['firstName'],
  );

  $form['updateProfile']['lastname'] = array(
    '#type' => 'markup',
    '#title' => t('Last Name'),
    '#markup' => $user_details['lastName'],
  );

  $form['updateProfile']['new_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Janssen Pro Login'),
    '#default_value' => $user->name,
    '#required' => TRUE,
    '#required_error' => (!empty($jnj_veeva_hcp_profile_signup_settings['email_req_error']) ? $jnj_veeva_hcp_profile_signup_settings['email_req_error'] : t('Please enter the email')),
    '#rules' => array(
      array('rule' => 'email', 'error' => !empty($jnj_veeva_hcp_profile_signup_settings['email_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['email_other_error'] : t('Invalid email address'))
    )
  );

  $form['updateProfile']['phone'] = array(
    '#type' => 'markup',
    '#title' => t('Phone'),
    '#markup' => $user_details['phone'],
  );

  $form['updateProfile']['password'] = array(
    '#type' => 'password',
    '#title' => t('New Password'),
    '#rules' => array(
      array('rule' => 'length[8,50]', 'error' => (!empty($jnj_veeva_hcp_profile_signup_settings['length[8,50]_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['length[8,50]_other_error'] : t('Please enter minimum 8 characters')))
    )
  );

  $form['updateProfile']['confirm_password'] = array(
    '#type' => 'password',
    '#title' => t('Confirm Password'),
    '#rules' => array(
      array('rule' => "validate_match_field[updateProfile[password]]", 'error' => t(isset($jnj_veeva_hcp_profile_signup_settings['confirm_password_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['confirm_password_other_error'] : t('Password mismatch')))
    )
  );

  $form['updateProfile']['role'] = array(
    '#type' => 'markup',
    '#title' => t('Your role'),
    '#markup' => $user_details['role'],
  );

  $form['updateProfile']['practiceName'] = array(
    '#type' => 'markup',
    '#title' => t('Practice Name'),
    '#markup' => $user_details['practiceName'],
  );

  $form['updateProfile']['addressLine1'] = array(
    '#type' => 'markup',
    '#title' => t('Practice street address'),
    '#markup' => $user_details['addressLine1'],
  );
  $form['updateProfile']['suburb'] = array(
    '#type' => 'markup',
    '#title' => t('Suburb'),
    '#markup' => $user_details['suburb'],
  );
  $form['updateProfile']['state'] = array(
    '#type' => 'markup',
    '#title' => t('State'),
    '#markup' => $user_details['state'],
  );
  $form['updateProfile']['postcode'] = array(
    '#type' => 'markup',
    '#title' => t('Post Code'),
    '#markup' => $user_details['postcode'],
  );

  $form['updateProfile']['therapyArea'] = array(
    '#type' => 'select',
    '#title' => t('Therapy area'),
    '#options' => drupal_map_assoc($registration_picklist['therapyArea']),
    '#default_value' => $user_details['therapyArea']
  );
  $form['updateProfile']['securityQuestions'][0]['question'] = array(
    '#type' => 'select',
    '#title' => t('Question'),
    '#options' => drupal_map_assoc($registration_picklist['securityQuestions']),
    '#empty_option' => t('Please select'),
    '#default_value' => $user_details['securityQuestions'][0]['question']
  );
  $form['updateProfile']['securityQuestions'][0]['answer'] = array(
    '#type' => 'textfield',
    '#title' => t('Answer'),
    '#default_value' => $user_details['securityQuestions'][0]['answer'],
    '#rules' => array(
      array('rule' => 'validate_value_dependent_field[updateProfile[securityQuestions][0][question]]', 'error' => 'Please enter the answer')
    )
  );
  $form['updateProfile']['securityQuestions'][1]['question'] = array(
    '#type' => 'select',
    '#title' => t('Question'),
    '#options' => drupal_map_assoc($registration_picklist['securityQuestions']),
    '#empty_option' => t('Please select'),
    '#default_value' => $user_details['securityQuestions'][1]['question'],
    '#rules' => array(
      array('rule' => 'validate_unique_field[updateProfile[securityQuestions][0][question]]', 'error' => t('Please select different question'))
    )
  );
  $form['updateProfile']['securityQuestions'][1]['answer'] = array(
    '#type' => 'textfield',
    '#title' => t('Answer'),
    '#default_value' => $user_details['securityQuestions'][1]['answer'],
    '#rules' => array(
      array('rule' => 'validate_value_dependent_field[updateProfile[securityQuestions][1][question]]', 'error' => 'Please enter the answer')
    )
  );

  $form['updateProfile']['emailSubscribe'] = array(
    '#type' => 'checkbox',
    '#title' => t(!empty($jnj_veeva_hcp_profile_signup_settings['emailSubscribe_label']) ? $jnj_veeva_hcp_profile_signup_settings['emailSubscribe_label'] : 'Yes, I would like to receive email updates from Janssen regarding new products, programs, events and Janssen Pro that are relevant to me.'),
    '#default_value' => ($user_details['emailSubscribe'] == 'true' ? 1 : 0)
  );
  $form['updateProfile']['accountEmail'] = array(
    '#type' => 'textfield',
    '#title' => t('Account Email'),
    '#default_value' => $user_details['accountEmail'],
    '#rules' => array(
      array('rule' => 'email', 'error' => !empty($jnj_veeva_hcp_profile_signup_settings['email_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['email_other_error'] : t('Invalid email address'))
    ),
    '#attributes' => array(
      'data-email' => $user_details['accountEmail'],
    )
  );

  $form['updateProfile']['consent'] = array(
    '#markup' => '<div class="consent-msg">' . $jnj_veeva_hcp_profile_settings['consent_text'] . '</div>',
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t("Update my details"),
    '#attributes' => array('class' => array('final-submit', 'btn', 'next')),
  );
  $form['#prefix'] = '<div class="profile-page"><div class="grey-bar">
      <h1>' . t('My Profile') . '</h1>
      <p class="breadcrumbs"><a href="/">' . t('Home') . '</a>' . t('My Profile') . '</p>
    </div> <div class="intro-text">
      <p>' . t('Manage your registration details, email preferences and areas of interest. To change your contact details, please phone the Janssen Pro team on 0410 644 547.') . '</p>
    </div>';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'] = array('contents');
  return $form;
}

/**
 * Function to display hcp update submit.
 */
function jnj_veeva_hcp_profile_update_submit($form, &$form_state) {

  global $user;
  $user_details = $_SESSION['user-details'];
  $params = $form_input = $form_state['values']['updateProfile'];
  $params['portalId'] = $user_details['portalId'];

  // Remove the password field if empty.
  if (empty($params['password'])) {
    unset($params['password']);
    unset($params['confirm_password']);
  }

  // Remove the new mail field if both old and new email are same.
  if ($params['email'] == $params['new_email']) {
    unset($params['new_email']);
  }

  // Remove the email subscribe field.
  if ($params['emailSubscribe'] == $form_state['complete form']['updateProfile']['emailSubscribe']['#default_value']) {
    unset($params['emailSubscribe']);
  }

  $params['portal'] = SERVICE_PORTAL_URL;
  foreach ($params['securityQuestions'] as $sec_key => $sec_question) {
    if ($sec_question['question'] == '') {
      $params['securityQuestions'][$sec_key]['question'] = ' ';
    }
    if ($sec_question['answer'] == '') {
      $params['securityQuestions'][$sec_key]['answer'] = ' ';
    }
  }

  $hcp_profile = new HcpProfile();
  $hcp_update_profile = $hcp_profile->updateHcpProfile($params);

  if ($hcp_update_profile['statusCode'] == ServiceStatusCodes::SUCCESS_UPDATE_PROFILE) {

    $userData = array(
      'therapyArea' => $form_input['therapyArea'],
      'emailSubscribe' => ($form_input['emailSubscribe'] ? 'true' : 'false'),
      'securityQuestions' => $form_input['securityQuestions'],
      'accountEmail' => $hcp_update_profile['accountEmail']);

    if ($params['email'] != $params['new_email']) {
      db_update('authmap')
          ->fields(array('authname' => $form_input['new_email']))
          ->condition('uid', $user->uid)
          ->execute();

      db_update('users')
          ->fields(array('init' => $form_input['new_email'], 'name' => $form_input['new_email'], 'mail' => $form_input['new_email']))
          ->condition('uid', $user->uid)
          ->execute();
    }
    unset($hcp_update_profile['statusCode']);
    $userData = array_merge($userData, $hcp_update_profile);
    update_user_data($user->uid, array_merge($user_details, $userData));
    drupal_set_message(t("Profile Updated Successfully"));
  }
  else {
    drupal_set_message(ServiceStatusCodes::getErrorMessageByCode($hcp_update_profile['statusCode']), 'error');
  }
}

/**
 * Function to browse as HCP.
 */
function janssenpro_browseashcp() {
  global $user;
  $query_params = drupal_get_query_parameters();
  $params['email'] = $query_params['name'];
  $key_value = explode(':', $query_params['value']);
  $params['secureKey'] = $key_value[0];
  $params['portalUserId'] = $key_value[1];
  $valid_referer = false;
  $referer_path = parse_url($_SERVER['HTTP_HOST']);
  if (isset($_SERVER['HTTP_REFERER']) && $_SERVER['HTTP_REFERER'] != '') {
    $referer_path = parse_url($_SERVER['HTTP_REFERER']);
    $path_split = array_reverse(explode('.', $referer_path['host']));
    if ($path_split[1] == 'salesforce' && $path_split[0] == 'com') {
      $valid_referer = true;
    }
  }
  if (!$valid_referer) {
    drupal_goto('');
  }
  if ($user->uid > 0 && $user->name == $query_params['name']) {
    drupal_goto('');
  }
  elseif ($user->uid > 0) {
    $options['query'] = drupal_get_destination();
    drupal_goto('user/logout', $options);
  }
  $params['portal'] = SERVICE_PORTAL_URL;
  $hcpprofile = new HcpProfile();
  $valid_user = $hcpprofile->browseAsHcp($params);
  if ($valid_user['statusCode'] == 'STS-LGN-103') {
    $form_state_info['uid'] = '';
    update_user_data($form_state_info['uid'], $valid_user);
    user_external_login_register($params['email'], "jjfusion_ap_hcp_profile");
    user_external_load($params['email']);
    
    user_login_submit(array(), $form_state_info);
    drupal_goto('');
  }
  else {
    $_SESSION['hcp-register-error'] = t('Profile is not valid. Please try after sometime.');
    drupal_goto("hcp-register/error");
  }
  exit;
}

/**
 * Function to optin preferences.
 */
function jnj_veeva_hcp_optin_preferences() {
  global $user;
  $form = array();
  $jnj_veeva_hcp_profile_signup_settings = drupal_json_decode(variable_get('jnj_veeva_hcp_profile_signup_settings'));
  if (user_is_logged_in() && arg(1) == '') {
    $params = array("accId" => (isset($_SESSION['user-details']) ? $_SESSION['user-details']['accId'] : ''));
    $params['accId'] = base64_encode($params['accId']);
  }
  else {
    $params = array("accId" => arg(1));
  }


  $hcpprofile = new HcpProfile();
  $userPreferences = $hcpprofile->getPreferences($params);
  if ($userPreferences['statusCode'] != 'EOO-105' && $userPreferences['statusCode'] != 'EOO-102') {
    if (!is_array($userPreferences['hcpSelectedPreference'])) {
      $userPreferences['hcpSelectedPreference'] = array($userPreferences['hcpSelectedPreference']);
    }
    $preference_group_count = 0;
    if (isset($userPreferences['hcpPreferences'])) {
      if ($userPreferences['categoryCount'] == 1) {
        $userPreferences['hcpPreferences'] = array($userPreferences['hcpPreferences']);
      }
      foreach ($userPreferences['hcpPreferences'] as $pref_key => $preference_category) {//p($preference_category);
        $options = array();
        if (count($preference_category['preferenceList']['entry']) == count($preference_category['preferenceList']['entry'], COUNT_RECURSIVE)) {
          $preference_category['preferenceList']['entry'] = array($preference_category['preferenceList']['entry']);
        }
        foreach ($preference_category['preferenceList']['entry'] as $preference) {
          $options[$preference['key']] = $preference['value'];
        }
        $form['updateProfile']['preferences' . $pref_key] = array(
          '#type' => 'checkboxes',
          '#options' => $options,
          '#default_value' => $userPreferences['hcpSelectedPreference'],
          '#title' => '<h3>' . $preference_category['preferenceCategory'] . '</h3>',
        );
        $preference_group_count++;
      }
    }
    $form['updateProfile']['preference_group_count'] = array(
      '#type' => 'value',
      '#value' => $preference_group_count,
    );
    $form['updateProfile']['email'] = array(
      '#type' => 'value',
      '#value' => $user->name,
    );
    $form['updateProfile']['emailSubscribe'] = array(
      '#type' => 'checkbox',
      '#title' => t(!empty($jnj_veeva_hcp_profile_signup_settings['emailSubscribe_label']) ? $jnj_veeva_hcp_profile_signup_settings['emailSubscribe_label'] : 'Yes, I would like to receive email updates from Janssen'),
      '#default_value' => ($userPreferences['emailSubscribe'] == 'true' ? 1 : 0),
      '#prefix' => '<div class="form-item form-type-checkboxes"><label><h3>Email updates</h3><label></div>'
    );
    $form['updateProfile']['accountEmail'] = array(
      '#type' => 'textfield',
      '#title' => t('Account Email'),
      '#default_value' => $userPreferences['accountEmail'],
      '#rules' => array(
        array('rule' => 'email', 'error' => !empty($jnj_veeva_hcp_profile_signup_settings['email_other_error']) ? $jnj_veeva_hcp_profile_signup_settings['email_other_error'] : t('Invalid email address'))
      ),
      '#attributes' => array(
        'data-email' => $userPreferences['accountEmail'],
      ),
      '#prefix' => '<div class="form-preferences-accountemail">',
      '#suffix' => '</div>',
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Submit',
      '#attributes' => array('class' => array('btn', 'submit', 'final-submit')),
    );
    if (user_is_logged_in()) {
      $form['#prefix'] = '<header class="short clouds">
	<div class="form-item"><label><h1>' . $userPreferences['title'] . ' ' . $userPreferences['firstName'] . ' ' . $userPreferences['lastName'] . ' ' . t('\'s Email preferences') . '</h1></label></div>
</header><div class="wrapper"><div class="content">';
    }
    else {
      $form['#prefix'] = '<div class="forgot-form-wrapper"><header>
              <h2>' . $userPreferences['title'] . ' ' . $userPreferences['firstName'] . ' ' . $userPreferences['lastName'] . ' ' . t('\'s Email preferences') . '</h2>
              <p></p>
            </header></div><div class="wrapper"><div class="content">';
    }
    $form['#suffix'] = '</div></div>';
  }
  else {
    if (user_is_logged_in()) {
      $form['#prefix'] = '<header class="short clouds">
            <div class="form-item"><label><h1>' . t('Email preferences') . '</h1></label></div>
          </header><div class="wrapper"><div class="content">';
    }
    else {
      $form['#prefix'] = '<div class="forgot-form-wrapper"><header>
              <h2>' . t('Email preferences') . '</h2>
              <p></p>
            </header></div><div class="wrapper"><div class="content">';
    }
    $form['desc'] = array(
      '#type' => 'markup',
      '#markup' => '<div class="form-item form-type-checkboxes"><label>' . t('Invalid URL provided.') . '<label></div>'
    );
    $form['#suffix'] = '</div></div>';
  }
  return $form;
}

/**
 * Function to optin preferences.
 */
function jnj_veeva_hcp_optin_preferences_submit($form, &$form_state) {
  global $base_url;
  $selected_values = $form_state['values'];
  $user_details = $_SESSION['user-details'];
  if (user_is_logged_in() && arg(1) == '') {
    $params = array("accId" => (isset($_SESSION['user-details']) ? $_SESSION['user-details']['accId'] : ''));
  }
  else {
    $params = array("accId" => base64_decode(arg(1)));
  }
  $selectedPreferences = $deselectedPreferences = array();
  for ($i = 0; $i < $selected_values['preference_group_count']; $i++) {
    foreach ($selected_values['preferences' . $i] as $pre_key => $pre_val) {
      if ($pre_val != '0') {
        if (!in_array($pre_key, $form['updateProfile']['preferences' . $i]['#default_value'])) {
          $selectedPreferences[] = $pre_key;
        }
      }
      else {
        if (in_array($pre_key, $form['updateProfile']['preferences' . $i]['#default_value'])) {
          $deselectedPreferences[] = $pre_key;
        }
      }
    }
  }
  $params['selectedPreferences'] = $selectedPreferences;
  $params['deselectedPreferences'] = $deselectedPreferences; //p($form['updateProfile']['emailSubscribe']);exit;
  if ($selected_values['emailSubscribe'] != $form['updateProfile']['emailSubscribe']['#default_value']) {
    $params['emailSubscribe'] = $selected_values['emailSubscribe'];
  }
  $params['portalId'] = $user_details['portalId'];
  $params['portalUserId'] = $user_details['portalUserId'];
  $params['accountEmail'] = $selected_values['accountEmail'];
  $params['portal'] = SERVICE_PORTAL_URL;

  $hcpprofile = new HcpProfile();
  $savePreferences = $hcpprofile->savePreferences($params);
  if ($savePreferences['statusCode'] == 'PUS-101') {
    $params['email'] = $form_state['values']['email'];
    $params['preferencelink'] = $base_url . '/hcp-optin-preferences/' . base64_encode($params['accId']);
    $params['unsubscribelink'] = $base_url . '/hcp-email-optout/' . base64_encode($params['accId']);

    drupal_goto('hcp-optin-preferences/success');
  }
  else {
    drupal_goto('hcp-service-error');
  }
}

/**
 * Function to optin preferences success.
 */
function jnj_veeva_hcp_optin_preferences_success() {
  return '<div class="thankyou"><header class="short clouds">
              <h1>' . t('Opt-In Preferences') . '</h1>
            </header>
            <article>
            <div class="content">
              <fieldset>
                <p>' . t('Thanks for updating your preferences.') . '</p>
              </fieldset>
            </div></article>
			</div>';
}

/**
 * Function to email optout.
 */
function jnj_veeva_hcp_email_optout() {
  if (user_is_logged_in() && arg(1) == '') {
    $params = array("accId" => (isset($_SESSION['user-details']) ? $_SESSION['user-details']['accId'] : ''));
    $params['accId'] = base64_encode($params['accId']);
  }
  else {
    $params = array("accId" => arg(1));
  }
  $params['portal'] = SERVICE_PORTAL_URL;

  $hcpprofile = new HcpProfile();
  $emailoptout = $hcpprofile->emailOptOut($params); //p($emailoptout);exit;
  if ($emailoptout['statusCode'] == 'EOO-101') {
    $message = t('You have unsubscribed successfully from the site.');
  }
  elseif ($emailoptout['statusCode'] == 'EOO-102') {
    $message = t('Invalid link or link expired. Please verify email.');
  }
  elseif ($emailoptout['statusCode'] == 'EOO-103') {
    $message = t('You already opted out from the site.');
  }
  elseif ($emailoptout['statusCode'] == 'EOO-104') {
    $message = t('Invalid link or link expired. Please verify email.');
  }
  else {
    $message = t('Invalid link or link expired. Please verify email.');
  }

  return '<div class="thankyou"><header class="short clouds">
              <h1>' . t('Email Optout') . '</h1>
            </header>
            <article>
            <div class="content">
              <fieldset>
                <p>' . $message . '</p>
              </fieldset>
            </div></article>
			</div>';
}
